{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1489480623000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1488363199000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1488363199000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1488363199000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1488363199000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1488363199000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1488363199000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1488363199000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1488363199000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1488363199000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1488363199000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1488363199000},{"_id":"themes/next/_config.yml","hash":"5ef98226c7e6ab93551f3ec414afdc5e5c3a9b5e","modified":1490077697000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1488363199000},{"_id":"themes/next/gulpfile.coffee","hash":"933e6d29eb82522cff0df209d52b935e91b1111c","modified":1488363199000},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1488363199000},{"_id":"source/_posts/Leetcode 记录（1）.md","hash":"49081102a3895113fc38cb7f017df1c193541370","modified":1489386422000},{"_id":"source/_posts/Vue 2.0升（tang）级（keng）备忘.md","hash":"2405658418c2cf5f45c1ee90e5a77ea023f72b4e","modified":1489386426000},{"_id":"source/_posts/Vue 组件化（1）.md","hash":"cb1c0e2072be6758e9c694cd5aab50e0b6d992b9","modified":1489405832000},{"_id":"source/_posts/ios 开发（swift）学习 Day1.md","hash":"29ee3d4956a8bb8f1a8329aa513c42263075a12c","modified":1489386417000},{"_id":"source/_posts/站务相关.md","hash":"80a3b6cfdf3e2cdb61619ecc0346b33240e6c8fd","modified":1489665941000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488363199000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1488363199000},{"_id":"source/tags/index.md","hash":"2a0203c5d59af36818d9e8d02df7cc777f444077","modified":1489386400000},{"_id":"source/_posts/leetCode 记录（2）.md","hash":"0df3321aba7f10dfa206a0dde869c63281e4dc67","modified":1489386232000},{"_id":"source/_posts/从爬虫来看再入门js正则表达式.md","hash":"730c9cb456587bc1004b32a8dcc66045b325250f","modified":1489646147000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488363004000},{"_id":"themes/next/.git/index","hash":"70f6f3efafce92544d5aa1138e734e9b18052613","modified":1488508278000},{"_id":"themes/next/.git/packed-refs","hash":"ae4fb714c7415a54df49424c10d8a122ffcf7332","modified":1488363199000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1488363199000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1488363199000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1488363199000},{"_id":"themes/next/languages/default.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488363199000},{"_id":"themes/next/languages/en.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488363199000},{"_id":"themes/next/languages/fr-FR.yml","hash":"e98f1558347752a20019b71f0b1f9c8be1b34f42","modified":1488363199000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1488363199000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1488363199000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1488363199000},{"_id":"themes/next/languages/ru.yml","hash":"5022885d8955e1b91d8841048db272bf99c59a76","modified":1488363199000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"40d01dc46d57f71c2ef635c45b295d4355456e90","modified":1488363199000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1488363199000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1488363199000},{"_id":"themes/next/languages/zh-tw.yml","hash":"68407799271c78ecc07f03d238257dd8c65ad42d","modified":1488363199000},{"_id":"themes/next/languages/zh-hk.yml","hash":"19c23d21f262e24c06ee6ddfd51d2a6585304f88","modified":1488363199000},{"_id":"themes/next/layout/_layout.swig","hash":"2c0c3547a5b470024326a33ae2779d5ee0252266","modified":1488363199000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1488363199000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1488363199000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1488363199000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1488363199000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1488363199000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1488363199000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1488363199000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1488363199000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1488363199000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1488363199000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1488363199000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1488363199000},{"_id":"themes/next/layout/_custom/header.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489646872000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1488363004000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488363004000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1488363004000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1488363004000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1488363004000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1488363004000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488363004000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1488363004000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488363004000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1488363004000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488363004000},{"_id":"themes/next/.git/logs/HEAD","hash":"23d715fa660e90c158ce407b0936d531ce499a28","modified":1488363199000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1488363199000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1488363199000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1488363199000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b57650032ed47b8bd357ec4dcc02d872fdd0e3e1","modified":1488363199000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1488363199000},{"_id":"themes/next/layout/_macro/post.swig","hash":"2c2efe44ea013030f3ce5da7bfdeddb74489eb6e","modified":1488363199000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1488363199000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1488363199000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1488363199000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1488363199000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1488363199000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1488363199000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1488363199000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1488363199000},{"_id":"themes/next/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1488363199000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1488363199000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1488363199000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1488363199000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1488363199000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1488363199000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"79378f3a1cd90518b07808ed09156a3ab55ffa31","modified":1488363199000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1488363199000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1488363199000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1488363199000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1488363199000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1488363199000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1488363199000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1488363199000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1488363199000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1488363199000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1488363199000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1488363199000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1488363199000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488363199000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488363199000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1488363199000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1488363199000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1488363199000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1488363199000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488363199000},{"_id":"themes/next/.git/refs/heads/master","hash":"0154354e306a8381cbb0b4b009d2eabebe0cfcda","modified":1488363199000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1488363199000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1488363199000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1488363199000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1488363199000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"8dd5d7db879785bedabfcf491156b62822a53a6a","modified":1489646938000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"741f09b2ba4e440011c15f5d288b109b82c87f1b","modified":1488363199000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1488363199000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1488363199000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1488363199000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1488363199000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1488363199000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"ceb39c100c99900294ddee8b1ff81fcaf43873b5","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1488363199000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1488363199000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1488363199000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1488363199000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1488363199000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1488363199000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1488363199000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e7c76d93605e2b685274400afe51c55cc651486e","modified":1488363199000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"54ca0acff29a414e2c1b7c1790db22f0c775604c","modified":1488363199000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1488363199000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1488363199000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1488363199000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1488363199000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1488363199000},{"_id":"themes/next/source/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1488363199000},{"_id":"themes/next/source/js/src/utils.js","hash":"9ff232a2d39a513b811814480502e3eaac429c52","modified":1488363199000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1488363199000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1488363199000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1488363199000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1488363199000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1488363199000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1488363199000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488363199000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"23d715fa660e90c158ce407b0936d531ce499a28","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1488363199000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1488363199000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1488363199000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1488363199000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1488363199000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1488363199000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1488363199000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"f15537cee1a9ef4fa1e72a1670ebce4097db8115","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1488363199000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1488363199000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1488363199000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1488363199000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1488363199000},{"_id":"themes/next/.git/objects/pack/pack-3ab000a3ee490e82f0705643463c2f2aa775d10f.idx","hash":"05acef54f7fd97a39976a1be8daf92b9160386da","modified":1488363199000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1488363199000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"23d715fa660e90c158ce407b0936d531ce499a28","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8fe1e55bc290e6aaf07cc644fe27b62107a272a8","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1488363199000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1488363199000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1488363199000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1488363199000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1488363199000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1488363199000},{"_id":"themes/next/.git/objects/pack/pack-3ab000a3ee490e82f0705643463c2f2aa775d10f.pack","hash":"b27c289ee3cb88f54453ea53061996d4c4587595","modified":1488363199000},{"_id":"public/tags/index.html","hash":"edbeb0cc8d8161c15a226ea53b95e258089488a8","modified":1490258943530},{"_id":"public/2017/03/01/Vue 2.0升（tang）级（keng）备忘/index.html","hash":"aae5b4506da41895eab65d9683007de9a1882264","modified":1490258943611},{"_id":"public/archives/index.html","hash":"116fb4e0f2e81a3339fddd13ae41ff908aad52d7","modified":1490258943611},{"_id":"public/archives/2017/index.html","hash":"86734894a7432af3ea6f2174ceda14de161fb7bd","modified":1490258943611},{"_id":"public/archives/2017/03/index.html","hash":"d662bb93c2bffd054f15ec0fe784b2ffddb1a315","modified":1490258943611},{"_id":"public/categories/算法/index.html","hash":"b9ae03558c2a77b6270ac82224bf0d44b0cd3428","modified":1490258943609},{"_id":"public/categories/前端/index.html","hash":"3b1dd7cba15c753c34b8052b963b10e46356308d","modified":1490258943609},{"_id":"public/categories/ios/index.html","hash":"f8123db4b637472cbe2f61507fcdb32fbddf3908","modified":1490258943610},{"_id":"public/categories/站务/index.html","hash":"3683c57154f059589869b343fccb672f1019316e","modified":1490258943610},{"_id":"public/tags/vue/index.html","hash":"0bcef1384c55449dde0a9900140d42a2d7bd99fe","modified":1490258943610},{"_id":"public/tags/ios/index.html","hash":"cace7e24c4aebf31bbb5092e68f409bd7b92c2a3","modified":1490258943610},{"_id":"public/tags/nginx/index.html","hash":"3c1629935aed636a4e367dcd8c4016936a9c64e6","modified":1490258943610},{"_id":"public/tags/正则表达式/index.html","hash":"ab0b24e7ecd04bc6854fcf076d214830e99fbc61","modified":1490258943610},{"_id":"public/tags/js/index.html","hash":"5cd9eec6416b73a491db9f2212eac2f06164422e","modified":1490258943610},{"_id":"public/2017/03/16/从爬虫来看再入门js正则表达式/index.html","hash":"a6fc5e89e5d0272b40595073d2c190cd2c2626f4","modified":1490258943610},{"_id":"public/2017/03/13/Vue 组件化（1）/index.html","hash":"44d403e57232ce27ff57792cdec35fbb572628c0","modified":1490258943610},{"_id":"public/2017/03/13/站务相关/index.html","hash":"38a7b8da90ff04f48b206f7e013e264a8370626f","modified":1490258943610},{"_id":"public/2017/03/07/leetCode 记录（2）/index.html","hash":"c659ab4de5195137cb742b26804f2bba3a602467","modified":1490258943610},{"_id":"public/2017/03/06/Leetcode 记录（1）/index.html","hash":"3c046368750acd156219d080eae502665530edcc","modified":1490258943611},{"_id":"public/2017/03/03/ios 开发（swift）学习 Day1/index.html","hash":"db3efe94559051ec17fb578ef0c3a5c9f7148922","modified":1490258943610},{"_id":"public/index.html","hash":"2f3ce36cff366036e84bdb2cedcb4aa3f386331f","modified":1490258943611},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1489665966519},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1489665966519},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1489665966519},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1489665966519},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1489665966519},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1489665966519},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1489665966519},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1489665966519},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489665966519},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489665966519},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1489665966519},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1489665966519},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1489665966519},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1489665966520},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1489665966520},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1489665966520},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1489665966520},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1489665966520},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1489665966520},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1489665966520},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1489665966520},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1489665966520},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1489665966520},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1489665966520},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1489665967833},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1489665967840},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1489665967850},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1489665967850},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1489665967850},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1489665967850},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1489665967850},{"_id":"public/js/src/algolia-search.js","hash":"54ca0acff29a414e2c1b7c1790db22f0c775604c","modified":1489665967850},{"_id":"public/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1489665967850},{"_id":"public/js/src/utils.js","hash":"9ff232a2d39a513b811814480502e3eaac429c52","modified":1489665967850},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1489665967850},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1489665967850},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1489665967850},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1489665967850},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1489665967850},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1489665967850},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1489665967850},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1489665967850},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1489665967850},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1489665967850},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1489665967850},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1489665967850},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1489665967850},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1489665967850},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1489665967850},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1489665967850},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1489665967850},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1489665967850},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1489665967851},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1489665967851},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1489665967851},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1489665967851},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1489665967851},{"_id":"public/css/main.css","hash":"80c85ff3aaaf9623901f3c3557d245279d3928a4","modified":1489665967851},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1489665967851},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1489665967851},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1489665967851},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1489665967851},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1489665967851},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1489665967851},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1489665967851},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1489665967851},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1489665967851},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1489665967851},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1489665967851},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1489665967851},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1489665967852},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1489665967858},{"_id":"source/_posts/rgba颜色转化.md","hash":"df0ba2bffe5b05f5478e1f34bfb1e46b53394136","modified":1490090798000},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1489982666000},{"_id":"public/tags/rgba/index.html","hash":"95dd2b42809ea22e36e4b0ebb4d408e7addb6a78","modified":1490258943610},{"_id":"public/2017/03/20/rgba颜色转化/index.html","hash":"a641760ce46f14aec4c2427394748b414f85d634","modified":1490258943610},{"_id":"public/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1489982816903},{"_id":"source/_posts/Vue组件化（2）.md","hash":"89fd2bd92ced029771d2a6af56eb8acbe9e5a320","modified":1490090484000},{"_id":"public/2017/03/21/Vue组件化（2）/index.html","hash":"adbdc04e1a6eb064f6d5764070cd62e72612b2c7","modified":1490258943610},{"_id":"source/_posts/如何使用webpack2进行Tree Shaking.md","hash":"eb0c52a4e355d2145320d483b7f8f3df55e9aaf0","modified":1490258929000},{"_id":"public/2017/03/23/如何使用webpack2进行Tree Shaking/index.html","hash":"6f08642b78d8e48614d28d5f41ba8c37a5bdbd25","modified":1490258943610},{"_id":"public/tags/webpack/index.html","hash":"95b6fe6af59b5f7c6a318bb4cf20f977df424022","modified":1490258943613},{"_id":"public/tags/babel/index.html","hash":"74e5c5a07a7c94695d7bf588174c0a432a3e53dc","modified":1490258943613}],"Category":[{"name":"算法","_id":"cj0ccnih70003pw3aq9siuoeb"},{"name":"前端","_id":"cj0ccnihm0008pw3awofuugjm"},{"name":"ios","_id":"cj0ccnii5000ipw3ay6byedbh"},{"name":"站务","_id":"cj0ccnii7000npw3aklvn20ca"}],"Data":[],"Page":[{"title":"","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle:\ntype: \"tags\"\n---","date":"2017-03-13T06:26:40.000Z","updated":"2017-03-13T06:26:40.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj0ccnigx0001pw3a9mz33dzn","content":"","excerpt":"","more":""}],"Post":[{"title":"Leetcode 记录","_content":"## Leetcode 记录\n\n### K-diff Pairs in an Array\n\n> [K-diff Pairs in an Array](https://leetcode.com/problems/k-diff-pairs-in-an-array/?tab=Description)\n\n### 初始思路\n\n* O(n^2)遍历数组\n* 相减绝对值对比k\n* 算出个数\n\n<!-- more -->\n### 遇到问题\n\n* 遍历数量多\n\t* （解决）先排序，然后遍历出第一个结果则break\n* 会出现重复统计\n\t* （解决）使用临时对象储存已经遍历出来的配对\n\t* （新问题）会出现(0,1),(0,-1)这样2种情况的配对，单个对象存储是被覆盖\n\t* （解决）临时两个对象存放同一键值2个状态\n\n### 结果\n\t/**\n\t * @param {number[]} nums\n\t * @param {number} k\n\t * @return {number}\n\t */\n\tvar findPairs = function(nums, k) {\n\t    var ap = {},\n\t        ad = {}\n\t    var p = 0;\n\t    var sort = nums.sort(function(a,b){\n\t            return b-a});\n\t    for(var i = 0;i<sort.length;i++){\n\t        for(var n = i+1;n<sort.length;n++){\n\t            var p1 = sort[i],\n\t                p2 = sort[n]\n\t            if(Math.abs(p1-p2) === k){\n\t                if(ap[p1] == p2 || ad[p1] == p2 || ap[p2] == p1 || ad[p2] == p1){\n\t                    break;\n\t                }\n\t                if( ((ap[p1] !== undefined) && (ap[p1] != p2)) || ((ap[p2] !== undefined) && (ap[p2] != p1) )){\n\t                    ad[p1] = p2;\n\t                    ad[p2] = p1\n\t                }else{\n\t                    ap[p1] = p2;\n\t                    ap[p2] = p1 \n\t                }\n\t                p++\n\t            }\n\t        }\n\t    }\n\t    return p\n\t};\n\n### 思考\n* 复杂代码理解能力不够，无法完整预演算，需要debug调试。\n* 思考问题不够仔细很多问题点没思考出来，运算出问题才去找。\n* 复杂度问题没有解决，依旧不是最优处理，需要继续思考。\n\n### TODO\n\n* 训练基本排序，等数据操作算法\n* 加强手写代码能力与理解能力\n* 减少debug依赖","source":"_posts/Leetcode 记录（1）.md","raw":"title: Leetcode 记录\ncategories: 算法\n---\n## Leetcode 记录\n\n### K-diff Pairs in an Array\n\n> [K-diff Pairs in an Array](https://leetcode.com/problems/k-diff-pairs-in-an-array/?tab=Description)\n\n### 初始思路\n\n* O(n^2)遍历数组\n* 相减绝对值对比k\n* 算出个数\n\n<!-- more -->\n### 遇到问题\n\n* 遍历数量多\n\t* （解决）先排序，然后遍历出第一个结果则break\n* 会出现重复统计\n\t* （解决）使用临时对象储存已经遍历出来的配对\n\t* （新问题）会出现(0,1),(0,-1)这样2种情况的配对，单个对象存储是被覆盖\n\t* （解决）临时两个对象存放同一键值2个状态\n\n### 结果\n\t/**\n\t * @param {number[]} nums\n\t * @param {number} k\n\t * @return {number}\n\t */\n\tvar findPairs = function(nums, k) {\n\t    var ap = {},\n\t        ad = {}\n\t    var p = 0;\n\t    var sort = nums.sort(function(a,b){\n\t            return b-a});\n\t    for(var i = 0;i<sort.length;i++){\n\t        for(var n = i+1;n<sort.length;n++){\n\t            var p1 = sort[i],\n\t                p2 = sort[n]\n\t            if(Math.abs(p1-p2) === k){\n\t                if(ap[p1] == p2 || ad[p1] == p2 || ap[p2] == p1 || ad[p2] == p1){\n\t                    break;\n\t                }\n\t                if( ((ap[p1] !== undefined) && (ap[p1] != p2)) || ((ap[p2] !== undefined) && (ap[p2] != p1) )){\n\t                    ad[p1] = p2;\n\t                    ad[p2] = p1\n\t                }else{\n\t                    ap[p1] = p2;\n\t                    ap[p2] = p1 \n\t                }\n\t                p++\n\t            }\n\t        }\n\t    }\n\t    return p\n\t};\n\n### 思考\n* 复杂代码理解能力不够，无法完整预演算，需要debug调试。\n* 思考问题不够仔细很多问题点没思考出来，运算出问题才去找。\n* 复杂度问题没有解决，依旧不是最优处理，需要继续思考。\n\n### TODO\n\n* 训练基本排序，等数据操作算法\n* 加强手写代码能力与理解能力\n* 减少debug依赖","slug":"Leetcode 记录（1）","published":1,"date":"2017-03-06T10:07:33.000Z","updated":"2017-03-13T06:27:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnigp0000pw3a2t1vo527","content":"<h2 id=\"Leetcode-记录\"><a href=\"#Leetcode-记录\" class=\"headerlink\" title=\"Leetcode 记录\"></a>Leetcode 记录</h2><h3 id=\"K-diff-Pairs-in-an-Array\"><a href=\"#K-diff-Pairs-in-an-Array\" class=\"headerlink\" title=\"K-diff Pairs in an Array\"></a>K-diff Pairs in an Array</h3><blockquote>\n<p><a href=\"https://leetcode.com/problems/k-diff-pairs-in-an-array/?tab=Description\" target=\"_blank\" rel=\"external\">K-diff Pairs in an Array</a></p>\n</blockquote>\n<h3 id=\"初始思路\"><a href=\"#初始思路\" class=\"headerlink\" title=\"初始思路\"></a>初始思路</h3><ul>\n<li>O(n^2)遍历数组</li>\n<li>相减绝对值对比k</li>\n<li>算出个数</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><ul>\n<li>遍历数量多<ul>\n<li>（解决）先排序，然后遍历出第一个结果则break</li>\n</ul>\n</li>\n<li>会出现重复统计<ul>\n<li>（解决）使用临时对象储存已经遍历出来的配对</li>\n<li>（新问题）会出现(0,1),(0,-1)这样2种情况的配对，单个对象存储是被覆盖</li>\n<li>（解决）临时两个对象存放同一键值2个状态</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><pre><code>/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findPairs = function(nums, k) {\n    var ap = {},\n        ad = {}\n    var p = 0;\n    var sort = nums.sort(function(a,b){\n            return b-a});\n    for(var i = 0;i&lt;sort.length;i++){\n        for(var n = i+1;n&lt;sort.length;n++){\n            var p1 = sort[i],\n                p2 = sort[n]\n            if(Math.abs(p1-p2) === k){\n                if(ap[p1] == p2 || ad[p1] == p2 || ap[p2] == p1 || ad[p2] == p1){\n                    break;\n                }\n                if( ((ap[p1] !== undefined) &amp;&amp; (ap[p1] != p2)) || ((ap[p2] !== undefined) &amp;&amp; (ap[p2] != p1) )){\n                    ad[p1] = p2;\n                    ad[p2] = p1\n                }else{\n                    ap[p1] = p2;\n                    ap[p2] = p1 \n                }\n                p++\n            }\n        }\n    }\n    return p\n};\n</code></pre><h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>复杂代码理解能力不够，无法完整预演算，需要debug调试。</li>\n<li>思考问题不够仔细很多问题点没思考出来，运算出问题才去找。</li>\n<li>复杂度问题没有解决，依旧不是最优处理，需要继续思考。</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>训练基本排序，等数据操作算法</li>\n<li>加强手写代码能力与理解能力</li>\n<li>减少debug依赖</li>\n</ul>\n","excerpt":"<h2 id=\"Leetcode-记录\"><a href=\"#Leetcode-记录\" class=\"headerlink\" title=\"Leetcode 记录\"></a>Leetcode 记录</h2><h3 id=\"K-diff-Pairs-in-an-Array\"><a href=\"#K-diff-Pairs-in-an-Array\" class=\"headerlink\" title=\"K-diff Pairs in an Array\"></a>K-diff Pairs in an Array</h3><blockquote>\n<p><a href=\"https://leetcode.com/problems/k-diff-pairs-in-an-array/?tab=Description\">K-diff Pairs in an Array</a></p>\n</blockquote>\n<h3 id=\"初始思路\"><a href=\"#初始思路\" class=\"headerlink\" title=\"初始思路\"></a>初始思路</h3><ul>\n<li>O(n^2)遍历数组</li>\n<li>相减绝对值对比k</li>\n<li>算出个数</li>\n</ul>","more":"<h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><ul>\n<li>遍历数量多<ul>\n<li>（解决）先排序，然后遍历出第一个结果则break</li>\n</ul>\n</li>\n<li>会出现重复统计<ul>\n<li>（解决）使用临时对象储存已经遍历出来的配对</li>\n<li>（新问题）会出现(0,1),(0,-1)这样2种情况的配对，单个对象存储是被覆盖</li>\n<li>（解决）临时两个对象存放同一键值2个状态</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><pre><code>/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findPairs = function(nums, k) {\n    var ap = {},\n        ad = {}\n    var p = 0;\n    var sort = nums.sort(function(a,b){\n            return b-a});\n    for(var i = 0;i&lt;sort.length;i++){\n        for(var n = i+1;n&lt;sort.length;n++){\n            var p1 = sort[i],\n                p2 = sort[n]\n            if(Math.abs(p1-p2) === k){\n                if(ap[p1] == p2 || ad[p1] == p2 || ap[p2] == p1 || ad[p2] == p1){\n                    break;\n                }\n                if( ((ap[p1] !== undefined) &amp;&amp; (ap[p1] != p2)) || ((ap[p2] !== undefined) &amp;&amp; (ap[p2] != p1) )){\n                    ad[p1] = p2;\n                    ad[p2] = p1\n                }else{\n                    ap[p1] = p2;\n                    ap[p2] = p1 \n                }\n                p++\n            }\n        }\n    }\n    return p\n};\n</code></pre><h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>复杂代码理解能力不够，无法完整预演算，需要debug调试。</li>\n<li>思考问题不够仔细很多问题点没思考出来，运算出问题才去找。</li>\n<li>复杂度问题没有解决，依旧不是最优处理，需要继续思考。</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>训练基本排序，等数据操作算法</li>\n<li>加强手写代码能力与理解能力</li>\n<li>减少debug依赖</li>\n</ul>"},{"title":"Vue 2.0升（tang）级（keng）备忘","_content":"## Vue 2.0升（tang）级（keng）备忘\n\n### 准备工作\n\n* [官方升级文档](https://cn.vuejs.org/v2/guide/migration.html)\n* [官方升级迁移工具](https://github.com/vuejs/vue-migration-helper)\n\n<!-- more -->\n### 生命周期\n\n* `ready`，`init`生命周期钩子替换成为`mounted`,`beforeCreate`\n\n### 页面模板\n\n\n* `v-for`之前遍历数组时的参数顺序是 (index, value)。现在是 (value, index)\n* 单个vue组件中Template内必须只包含一个根元素节点\n* `{% raw %}{{{}}}{% endraw %}`不被使用，由`v-html`替换\n* 标签属性中禁止使用`{% raw %}{{}}{% endraw %}`，由`v-bind`代替。\n\n\n### 方法\n\n* $dispatch 和 $broadcast 已经被弃用。父子组件事件传递使用$on\n* directive包裹第三方组件方式不被建议且改动工作量极大。\n* runtime中（dev环境）初始化Vue方式变更，使用`render`方法\n\n### vuex2\n\n* 初始化stroe方法变化\n* `action`中`mutation`参数只能是一个\n* 使用`mapGetters`与`mapActions`替换原本vuex方法引入方式","source":"_posts/Vue 2.0升（tang）级（keng）备忘.md","raw":"title: Vue 2.0升（tang）级（keng）备忘\ncategories: 前端\ntags:\n  - vue\n---\n## Vue 2.0升（tang）级（keng）备忘\n\n### 准备工作\n\n* [官方升级文档](https://cn.vuejs.org/v2/guide/migration.html)\n* [官方升级迁移工具](https://github.com/vuejs/vue-migration-helper)\n\n<!-- more -->\n### 生命周期\n\n* `ready`，`init`生命周期钩子替换成为`mounted`,`beforeCreate`\n\n### 页面模板\n\n\n* `v-for`之前遍历数组时的参数顺序是 (index, value)。现在是 (value, index)\n* 单个vue组件中Template内必须只包含一个根元素节点\n* `{% raw %}{{{}}}{% endraw %}`不被使用，由`v-html`替换\n* 标签属性中禁止使用`{% raw %}{{}}{% endraw %}`，由`v-bind`代替。\n\n\n### 方法\n\n* $dispatch 和 $broadcast 已经被弃用。父子组件事件传递使用$on\n* directive包裹第三方组件方式不被建议且改动工作量极大。\n* runtime中（dev环境）初始化Vue方式变更，使用`render`方法\n\n### vuex2\n\n* 初始化stroe方法变化\n* `action`中`mutation`参数只能是一个\n* 使用`mapGetters`与`mapActions`替换原本vuex方法引入方式","slug":"Vue 2.0升（tang）级（keng）备忘","published":1,"date":"2017-03-01T09:53:16.000Z","updated":"2017-03-13T06:27:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnih00002pw3azlokkelc","content":"<h2 id=\"Vue-2-0升（tang）级（keng）备忘\"><a href=\"#Vue-2-0升（tang）级（keng）备忘\" class=\"headerlink\" title=\"Vue 2.0升（tang）级（keng）备忘\"></a>Vue 2.0升（tang）级（keng）备忘</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/migration.html\" target=\"_blank\" rel=\"external\">官方升级文档</a></li>\n<li><a href=\"https://github.com/vuejs/vue-migration-helper\" target=\"_blank\" rel=\"external\">官方升级迁移工具</a></li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><ul>\n<li><code>ready</code>，<code>init</code>生命周期钩子替换成为<code>mounted</code>,<code>beforeCreate</code></li>\n</ul>\n<h3 id=\"页面模板\"><a href=\"#页面模板\" class=\"headerlink\" title=\"页面模板\"></a>页面模板</h3><ul>\n<li><code>v-for</code>之前遍历数组时的参数顺序是 (index, value)。现在是 (value, index)</li>\n<li>单个vue组件中Template内必须只包含一个根元素节点</li>\n<li><code>{{{}}}</code>不被使用，由<code>v-html</code>替换</li>\n<li>标签属性中禁止使用<code>{{}}</code>，由<code>v-bind</code>代替。</li>\n</ul>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ul>\n<li>$dispatch 和 $broadcast 已经被弃用。父子组件事件传递使用$on</li>\n<li>directive包裹第三方组件方式不被建议且改动工作量极大。</li>\n<li>runtime中（dev环境）初始化Vue方式变更，使用<code>render</code>方法</li>\n</ul>\n<h3 id=\"vuex2\"><a href=\"#vuex2\" class=\"headerlink\" title=\"vuex2\"></a>vuex2</h3><ul>\n<li>初始化stroe方法变化</li>\n<li><code>action</code>中<code>mutation</code>参数只能是一个</li>\n<li>使用<code>mapGetters</code>与<code>mapActions</code>替换原本vuex方法引入方式</li>\n</ul>\n","excerpt":"<h2 id=\"Vue-2-0升（tang）级（keng）备忘\"><a href=\"#Vue-2-0升（tang）级（keng）备忘\" class=\"headerlink\" title=\"Vue 2.0升（tang）级（keng）备忘\"></a>Vue 2.0升（tang）级（keng）备忘</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/migration.html\">官方升级文档</a></li>\n<li><a href=\"https://github.com/vuejs/vue-migration-helper\">官方升级迁移工具</a></li>\n</ul>","more":"<h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><ul>\n<li><code>ready</code>，<code>init</code>生命周期钩子替换成为<code>mounted</code>,<code>beforeCreate</code></li>\n</ul>\n<h3 id=\"页面模板\"><a href=\"#页面模板\" class=\"headerlink\" title=\"页面模板\"></a>页面模板</h3><ul>\n<li><code>v-for</code>之前遍历数组时的参数顺序是 (index, value)。现在是 (value, index)</li>\n<li>单个vue组件中Template内必须只包含一个根元素节点</li>\n<li><code>{{{}}}</code>不被使用，由<code>v-html</code>替换</li>\n<li>标签属性中禁止使用<code>{{}}</code>，由<code>v-bind</code>代替。</li>\n</ul>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ul>\n<li>$dispatch 和 $broadcast 已经被弃用。父子组件事件传递使用$on</li>\n<li>directive包裹第三方组件方式不被建议且改动工作量极大。</li>\n<li>runtime中（dev环境）初始化Vue方式变更，使用<code>render</code>方法</li>\n</ul>\n<h3 id=\"vuex2\"><a href=\"#vuex2\" class=\"headerlink\" title=\"vuex2\"></a>vuex2</h3><ul>\n<li>初始化stroe方法变化</li>\n<li><code>action</code>中<code>mutation</code>参数只能是一个</li>\n<li>使用<code>mapGetters</code>与<code>mapActions</code>替换原本vuex方法引入方式</li>\n</ul>"},{"title":"Vue 组件化（1）","_content":"\n## Vue 组件化（1）\n\n### 前言\n> 组件化是永恒不变的主题\n\n现在商户后台的整体设计视觉区域完善，组件化的进程也需要加紧完成了。如何去做好是一个比较难的问题。\n\n目标主要是几个方面：\n\n<!-- more -->\n* ~~支持按需加载~~\n* 攻克几个比较困难的组件（autocomplate，validator，select，datatable，dateselect）\n* 完善基础组件（loading，dialog，toast，transition）\n* 完成文档demo页面以及首页\n* 第三方非webpack项目可以使用\n\n### 按需加载\n> 重要但非必要\n\nantd和element的具体思路就是组件作为npm包，除了拥有集合所有组件的index文件外各个组件可以单独作用并打包出来然后通过\n\n\timport Button from 'ui/lib/button';\n\t\n这样的方式进行单独加载。或者使用`antd`的 [babel-plugin-import](https://github.com/ant-design/babel-plugin-import) 做语法转换。\n\n或许这个时候想到了**webpack2**的`tree-shaking`。不过遗憾的是，现在的`tree-shaking`不支持多入口下的完美shaking，所有其他入口使用过但是当前入口未使用的都会打包进来，而且如果这么做需要未编译的npm包且项目webpack不忽视`node_modules`（这样做成本太高）\n\n不过上面我说这个重要但非必要，考虑到现有商户后台组件化组件量不是很多，没有antd那样全面，最后文件不会特别巨大。而且对于某些复杂的页面特别是spa而言，基本上绝大部分组件都会用到，如果使用到按需加载也就是意味着所有地方都需要按需加载，这样工作量也会更大。\n\n不过，现在的商户后台并不是SPA这点还是很伤心，按需加载的需求还是很重要的，所以还是要尽量，或者区分基础组件与复杂组件作为区分加载，这样可能是比较好的方法和思路。","source":"_posts/Vue 组件化（1）.md","raw":"title: Vue 组件化（1）\ncategories: 前端\ntags:\n  - vue\n---\n\n## Vue 组件化（1）\n\n### 前言\n> 组件化是永恒不变的主题\n\n现在商户后台的整体设计视觉区域完善，组件化的进程也需要加紧完成了。如何去做好是一个比较难的问题。\n\n目标主要是几个方面：\n\n<!-- more -->\n* ~~支持按需加载~~\n* 攻克几个比较困难的组件（autocomplate，validator，select，datatable，dateselect）\n* 完善基础组件（loading，dialog，toast，transition）\n* 完成文档demo页面以及首页\n* 第三方非webpack项目可以使用\n\n### 按需加载\n> 重要但非必要\n\nantd和element的具体思路就是组件作为npm包，除了拥有集合所有组件的index文件外各个组件可以单独作用并打包出来然后通过\n\n\timport Button from 'ui/lib/button';\n\t\n这样的方式进行单独加载。或者使用`antd`的 [babel-plugin-import](https://github.com/ant-design/babel-plugin-import) 做语法转换。\n\n或许这个时候想到了**webpack2**的`tree-shaking`。不过遗憾的是，现在的`tree-shaking`不支持多入口下的完美shaking，所有其他入口使用过但是当前入口未使用的都会打包进来，而且如果这么做需要未编译的npm包且项目webpack不忽视`node_modules`（这样做成本太高）\n\n不过上面我说这个重要但非必要，考虑到现有商户后台组件化组件量不是很多，没有antd那样全面，最后文件不会特别巨大。而且对于某些复杂的页面特别是spa而言，基本上绝大部分组件都会用到，如果使用到按需加载也就是意味着所有地方都需要按需加载，这样工作量也会更大。\n\n不过，现在的商户后台并不是SPA这点还是很伤心，按需加载的需求还是很重要的，所以还是要尽量，或者区分基础组件与复杂组件作为区分加载，这样可能是比较好的方法和思路。","slug":"Vue 组件化（1）","published":1,"date":"2017-03-13T11:49:50.000Z","updated":"2017-03-13T11:50:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnihc0004pw3aloeh4w25","content":"<h2 id=\"Vue-组件化（1）\"><a href=\"#Vue-组件化（1）\" class=\"headerlink\" title=\"Vue 组件化（1）\"></a>Vue 组件化（1）</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><blockquote>\n<p>组件化是永恒不变的主题</p>\n</blockquote>\n<p>现在商户后台的整体设计视觉区域完善，组件化的进程也需要加紧完成了。如何去做好是一个比较难的问题。</p>\n<p>目标主要是几个方面：</p>\n<a id=\"more\"></a>\n<ul>\n<li><del>支持按需加载</del></li>\n<li>攻克几个比较困难的组件（autocomplate，validator，select，datatable，dateselect）</li>\n<li>完善基础组件（loading，dialog，toast，transition）</li>\n<li>完成文档demo页面以及首页</li>\n<li>第三方非webpack项目可以使用</li>\n</ul>\n<h3 id=\"按需加载\"><a href=\"#按需加载\" class=\"headerlink\" title=\"按需加载\"></a>按需加载</h3><blockquote>\n<p>重要但非必要</p>\n</blockquote>\n<p>antd和element的具体思路就是组件作为npm包，除了拥有集合所有组件的index文件外各个组件可以单独作用并打包出来然后通过</p>\n<pre><code>import Button from &apos;ui/lib/button&apos;;\n</code></pre><p>这样的方式进行单独加载。或者使用<code>antd</code>的 <a href=\"https://github.com/ant-design/babel-plugin-import\" target=\"_blank\" rel=\"external\">babel-plugin-import</a> 做语法转换。</p>\n<p>或许这个时候想到了<strong>webpack2</strong>的<code>tree-shaking</code>。不过遗憾的是，现在的<code>tree-shaking</code>不支持多入口下的完美shaking，所有其他入口使用过但是当前入口未使用的都会打包进来，而且如果这么做需要未编译的npm包且项目webpack不忽视<code>node_modules</code>（这样做成本太高）</p>\n<p>不过上面我说这个重要但非必要，考虑到现有商户后台组件化组件量不是很多，没有antd那样全面，最后文件不会特别巨大。而且对于某些复杂的页面特别是spa而言，基本上绝大部分组件都会用到，如果使用到按需加载也就是意味着所有地方都需要按需加载，这样工作量也会更大。</p>\n<p>不过，现在的商户后台并不是SPA这点还是很伤心，按需加载的需求还是很重要的，所以还是要尽量，或者区分基础组件与复杂组件作为区分加载，这样可能是比较好的方法和思路。</p>\n","excerpt":"<h2 id=\"Vue-组件化（1）\"><a href=\"#Vue-组件化（1）\" class=\"headerlink\" title=\"Vue 组件化（1）\"></a>Vue 组件化（1）</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><blockquote>\n<p>组件化是永恒不变的主题</p>\n</blockquote>\n<p>现在商户后台的整体设计视觉区域完善，组件化的进程也需要加紧完成了。如何去做好是一个比较难的问题。</p>\n<p>目标主要是几个方面：</p>","more":"<ul>\n<li><del>支持按需加载</del></li>\n<li>攻克几个比较困难的组件（autocomplate，validator，select，datatable，dateselect）</li>\n<li>完善基础组件（loading，dialog，toast，transition）</li>\n<li>完成文档demo页面以及首页</li>\n<li>第三方非webpack项目可以使用</li>\n</ul>\n<h3 id=\"按需加载\"><a href=\"#按需加载\" class=\"headerlink\" title=\"按需加载\"></a>按需加载</h3><blockquote>\n<p>重要但非必要</p>\n</blockquote>\n<p>antd和element的具体思路就是组件作为npm包，除了拥有集合所有组件的index文件外各个组件可以单独作用并打包出来然后通过</p>\n<pre><code>import Button from &apos;ui/lib/button&apos;;\n</code></pre><p>这样的方式进行单独加载。或者使用<code>antd</code>的 <a href=\"https://github.com/ant-design/babel-plugin-import\">babel-plugin-import</a> 做语法转换。</p>\n<p>或许这个时候想到了<strong>webpack2</strong>的<code>tree-shaking</code>。不过遗憾的是，现在的<code>tree-shaking</code>不支持多入口下的完美shaking，所有其他入口使用过但是当前入口未使用的都会打包进来，而且如果这么做需要未编译的npm包且项目webpack不忽视<code>node_modules</code>（这样做成本太高）</p>\n<p>不过上面我说这个重要但非必要，考虑到现有商户后台组件化组件量不是很多，没有antd那样全面，最后文件不会特别巨大。而且对于某些复杂的页面特别是spa而言，基本上绝大部分组件都会用到，如果使用到按需加载也就是意味着所有地方都需要按需加载，这样工作量也会更大。</p>\n<p>不过，现在的商户后台并不是SPA这点还是很伤心，按需加载的需求还是很重要的，所以还是要尽量，或者区分基础组件与复杂组件作为区分加载，这样可能是比较好的方法和思路。</p>"},{"title":"ios 开发（swift）学习 Day1","_content":"## ios 开发（swift）学习 Day1\n\n### 为啥学习ios开发\n\n* 果粉\n* 申请了ios开发者证书9个月\n* 一直想学\n\n### 为啥swift\n\n* 亲近一点点\n* 喜欢接触新的东西\n* 作为业余扩展\n\n<!-- more -->\n### 资料\n\n* [Start Developing iOS Apps (Swift)](https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1)\n\n### 过程\n\n* 直接使用New Project 新增swift项目\n* 以上面资料作为教程\n* 进行到*Work with View Controllers*\n\n### 坑\n\n* connect的时候随便定义了名称然后在viewcontroller中修改了名称导致运行报错，需要在storyboard删除掉原来的。\n\n### 收获\n\n* 了解基于storyboard的ios UI 布局\n* 了解UIkit\n\n### TODO\n\n* ios UI布局模型（css 盒模型）的了解\n* 代码形式布局\n* 基本delegate\n\n\n\n\n","source":"_posts/ios 开发（swift）学习 Day1.md","raw":"title: ios 开发（swift）学习 Day1\ncategories: ios\ntags:\n  - ios\n---\n## ios 开发（swift）学习 Day1\n\n### 为啥学习ios开发\n\n* 果粉\n* 申请了ios开发者证书9个月\n* 一直想学\n\n### 为啥swift\n\n* 亲近一点点\n* 喜欢接触新的东西\n* 作为业余扩展\n\n<!-- more -->\n### 资料\n\n* [Start Developing iOS Apps (Swift)](https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1)\n\n### 过程\n\n* 直接使用New Project 新增swift项目\n* 以上面资料作为教程\n* 进行到*Work with View Controllers*\n\n### 坑\n\n* connect的时候随便定义了名称然后在viewcontroller中修改了名称导致运行报错，需要在storyboard删除掉原来的。\n\n### 收获\n\n* 了解基于storyboard的ios UI 布局\n* 了解UIkit\n\n### TODO\n\n* ios UI布局模型（css 盒模型）的了解\n* 代码形式布局\n* 基本delegate\n\n\n\n\n","slug":"ios 开发（swift）学习 Day1","published":1,"date":"2017-03-03T02:31:08.000Z","updated":"2017-03-13T06:26:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnihh0006pw3a66ma47x2","content":"<h2 id=\"ios-开发（swift）学习-Day1\"><a href=\"#ios-开发（swift）学习-Day1\" class=\"headerlink\" title=\"ios 开发（swift）学习 Day1\"></a>ios 开发（swift）学习 Day1</h2><h3 id=\"为啥学习ios开发\"><a href=\"#为啥学习ios开发\" class=\"headerlink\" title=\"为啥学习ios开发\"></a>为啥学习ios开发</h3><ul>\n<li>果粉</li>\n<li>申请了ios开发者证书9个月</li>\n<li>一直想学</li>\n</ul>\n<h3 id=\"为啥swift\"><a href=\"#为啥swift\" class=\"headerlink\" title=\"为啥swift\"></a>为啥swift</h3><ul>\n<li>亲近一点点</li>\n<li>喜欢接触新的东西</li>\n<li>作为业余扩展</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ul>\n<li><a href=\"https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1\" target=\"_blank\" rel=\"external\">Start Developing iOS Apps (Swift)</a></li>\n</ul>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><ul>\n<li>直接使用New Project 新增swift项目</li>\n<li>以上面资料作为教程</li>\n<li>进行到<em>Work with View Controllers</em></li>\n</ul>\n<h3 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h3><ul>\n<li>connect的时候随便定义了名称然后在viewcontroller中修改了名称导致运行报错，需要在storyboard删除掉原来的。</li>\n</ul>\n<h3 id=\"收获\"><a href=\"#收获\" class=\"headerlink\" title=\"收获\"></a>收获</h3><ul>\n<li>了解基于storyboard的ios UI 布局</li>\n<li>了解UIkit</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>ios UI布局模型（css 盒模型）的了解</li>\n<li>代码形式布局</li>\n<li>基本delegate</li>\n</ul>\n","excerpt":"<h2 id=\"ios-开发（swift）学习-Day1\"><a href=\"#ios-开发（swift）学习-Day1\" class=\"headerlink\" title=\"ios 开发（swift）学习 Day1\"></a>ios 开发（swift）学习 Day1</h2><h3 id=\"为啥学习ios开发\"><a href=\"#为啥学习ios开发\" class=\"headerlink\" title=\"为啥学习ios开发\"></a>为啥学习ios开发</h3><ul>\n<li>果粉</li>\n<li>申请了ios开发者证书9个月</li>\n<li>一直想学</li>\n</ul>\n<h3 id=\"为啥swift\"><a href=\"#为啥swift\" class=\"headerlink\" title=\"为啥swift\"></a>为啥swift</h3><ul>\n<li>亲近一点点</li>\n<li>喜欢接触新的东西</li>\n<li>作为业余扩展</li>\n</ul>","more":"<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ul>\n<li><a href=\"https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1\">Start Developing iOS Apps (Swift)</a></li>\n</ul>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><ul>\n<li>直接使用New Project 新增swift项目</li>\n<li>以上面资料作为教程</li>\n<li>进行到<em>Work with View Controllers</em></li>\n</ul>\n<h3 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h3><ul>\n<li>connect的时候随便定义了名称然后在viewcontroller中修改了名称导致运行报错，需要在storyboard删除掉原来的。</li>\n</ul>\n<h3 id=\"收获\"><a href=\"#收获\" class=\"headerlink\" title=\"收获\"></a>收获</h3><ul>\n<li>了解基于storyboard的ios UI 布局</li>\n<li>了解UIkit</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>ios UI布局模型（css 盒模型）的了解</li>\n<li>代码形式布局</li>\n<li>基本delegate</li>\n</ul>"},{"title":"站务相关","_content":"\n## 站务相关 - 持续更新\n\n### 备案\n\n> 从湖南到浙江的跨越\n\n备案可谓一波三折，多年前的湖南备案了中文域名，成功后就后悔了。但是湖南备案要求很高，必须身份证，手机号，住址等地区必须全部都高度一致。而最开始的湖南手机号已经报销，无法走原来的备案新增网站，于是发现了浙江备案条件十分简单就申请了浙江备案。\n\n开心的申请完成后被客服告知一个人只能有一个备案号，于是只能申请撤销了湖南的备案走了浙江备案流程，感谢腾讯云，历时2周备案完成。\n\n### Hexo\n\n> 懒人的救星\n\n<!-- more -->\n\n感谢 [hexo](https://github.com/hexojs/hexo) 感谢 [hexo-theme-next](https://github.com/iissnan/hexo-theme-next) 主题使我能够快速的愉快的写起来。\n\n一些自己的坑：\n\n* tags页面需要自己建立文件夹\n* [Q&A](http://theme-next.iissnan.com/faqs.html)\n\n### 服务器\n\n> 域名在阿里云，服务器在腾讯云\n\n服务器使用了ubuntu 14\n\n#### nginx配置\n\n> 从入门到入门\n\n每次使用nginx都要相隔很久很久，导致每次都感觉是入门一样。上次配置完成后完全忘记了`server`模块配置地址，找了半天，一直以为nginx配置文件路径不对（主配置文件里面没有server配置，但是实际又生效了）\n\n而且在配置ssl的时候又着实sb了，把crt文件放到了配置文件夹，主配置文件引用了该文件夹下全部文件，导致会读取crt文件作为nagix配置文件一直测试不过，查遍各种都没找到问题，最后开始主入口配置文件的原因。\n\nssl直接使用了腾讯云提供的免费dv协议\n\n### SEO\n\n提交了百度统计，google网站认证。页面使用百度统计代码。\n\n### todo\n\n* 评论组件","source":"_posts/站务相关.md","raw":"title: 站务相关\ncategories: 站务\ntags:\n  - nginx\n---\n\n## 站务相关 - 持续更新\n\n### 备案\n\n> 从湖南到浙江的跨越\n\n备案可谓一波三折，多年前的湖南备案了中文域名，成功后就后悔了。但是湖南备案要求很高，必须身份证，手机号，住址等地区必须全部都高度一致。而最开始的湖南手机号已经报销，无法走原来的备案新增网站，于是发现了浙江备案条件十分简单就申请了浙江备案。\n\n开心的申请完成后被客服告知一个人只能有一个备案号，于是只能申请撤销了湖南的备案走了浙江备案流程，感谢腾讯云，历时2周备案完成。\n\n### Hexo\n\n> 懒人的救星\n\n<!-- more -->\n\n感谢 [hexo](https://github.com/hexojs/hexo) 感谢 [hexo-theme-next](https://github.com/iissnan/hexo-theme-next) 主题使我能够快速的愉快的写起来。\n\n一些自己的坑：\n\n* tags页面需要自己建立文件夹\n* [Q&A](http://theme-next.iissnan.com/faqs.html)\n\n### 服务器\n\n> 域名在阿里云，服务器在腾讯云\n\n服务器使用了ubuntu 14\n\n#### nginx配置\n\n> 从入门到入门\n\n每次使用nginx都要相隔很久很久，导致每次都感觉是入门一样。上次配置完成后完全忘记了`server`模块配置地址，找了半天，一直以为nginx配置文件路径不对（主配置文件里面没有server配置，但是实际又生效了）\n\n而且在配置ssl的时候又着实sb了，把crt文件放到了配置文件夹，主配置文件引用了该文件夹下全部文件，导致会读取crt文件作为nagix配置文件一直测试不过，查遍各种都没找到问题，最后开始主入口配置文件的原因。\n\nssl直接使用了腾讯云提供的免费dv协议\n\n### SEO\n\n提交了百度统计，google网站认证。页面使用百度统计代码。\n\n### todo\n\n* 评论组件","slug":"站务相关","published":1,"date":"2017-03-13T07:05:49.000Z","updated":"2017-03-16T12:05:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnihk0007pw3ahklvpt4k","content":"<h2 id=\"站务相关-持续更新\"><a href=\"#站务相关-持续更新\" class=\"headerlink\" title=\"站务相关 - 持续更新\"></a>站务相关 - 持续更新</h2><h3 id=\"备案\"><a href=\"#备案\" class=\"headerlink\" title=\"备案\"></a>备案</h3><blockquote>\n<p>从湖南到浙江的跨越</p>\n</blockquote>\n<p>备案可谓一波三折，多年前的湖南备案了中文域名，成功后就后悔了。但是湖南备案要求很高，必须身份证，手机号，住址等地区必须全部都高度一致。而最开始的湖南手机号已经报销，无法走原来的备案新增网站，于是发现了浙江备案条件十分简单就申请了浙江备案。</p>\n<p>开心的申请完成后被客服告知一个人只能有一个备案号，于是只能申请撤销了湖南的备案走了浙江备案流程，感谢腾讯云，历时2周备案完成。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>懒人的救星</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>感谢 <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"external\">hexo</a> 感谢 <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">hexo-theme-next</a> 主题使我能够快速的愉快的写起来。</p>\n<p>一些自己的坑：</p>\n<ul>\n<li>tags页面需要自己建立文件夹</li>\n<li><a href=\"http://theme-next.iissnan.com/faqs.html\" target=\"_blank\" rel=\"external\">Q&amp;A</a></li>\n</ul>\n<h3 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h3><blockquote>\n<p>域名在阿里云，服务器在腾讯云</p>\n</blockquote>\n<p>服务器使用了ubuntu 14</p>\n<h4 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h4><blockquote>\n<p>从入门到入门</p>\n</blockquote>\n<p>每次使用nginx都要相隔很久很久，导致每次都感觉是入门一样。上次配置完成后完全忘记了<code>server</code>模块配置地址，找了半天，一直以为nginx配置文件路径不对（主配置文件里面没有server配置，但是实际又生效了）</p>\n<p>而且在配置ssl的时候又着实sb了，把crt文件放到了配置文件夹，主配置文件引用了该文件夹下全部文件，导致会读取crt文件作为nagix配置文件一直测试不过，查遍各种都没找到问题，最后开始主入口配置文件的原因。</p>\n<p>ssl直接使用了腾讯云提供的免费dv协议</p>\n<h3 id=\"SEO\"><a href=\"#SEO\" class=\"headerlink\" title=\"SEO\"></a>SEO</h3><p>提交了百度统计，google网站认证。页面使用百度统计代码。</p>\n<h3 id=\"todo\"><a href=\"#todo\" class=\"headerlink\" title=\"todo\"></a>todo</h3><ul>\n<li>评论组件</li>\n</ul>\n","excerpt":"<h2 id=\"站务相关-持续更新\"><a href=\"#站务相关-持续更新\" class=\"headerlink\" title=\"站务相关 - 持续更新\"></a>站务相关 - 持续更新</h2><h3 id=\"备案\"><a href=\"#备案\" class=\"headerlink\" title=\"备案\"></a>备案</h3><blockquote>\n<p>从湖南到浙江的跨越</p>\n</blockquote>\n<p>备案可谓一波三折，多年前的湖南备案了中文域名，成功后就后悔了。但是湖南备案要求很高，必须身份证，手机号，住址等地区必须全部都高度一致。而最开始的湖南手机号已经报销，无法走原来的备案新增网站，于是发现了浙江备案条件十分简单就申请了浙江备案。</p>\n<p>开心的申请完成后被客服告知一个人只能有一个备案号，于是只能申请撤销了湖南的备案走了浙江备案流程，感谢腾讯云，历时2周备案完成。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><blockquote>\n<p>懒人的救星</p>\n</blockquote>","more":"<p>感谢 <a href=\"https://github.com/hexojs/hexo\">hexo</a> 感谢 <a href=\"https://github.com/iissnan/hexo-theme-next\">hexo-theme-next</a> 主题使我能够快速的愉快的写起来。</p>\n<p>一些自己的坑：</p>\n<ul>\n<li>tags页面需要自己建立文件夹</li>\n<li><a href=\"http://theme-next.iissnan.com/faqs.html\">Q&amp;A</a></li>\n</ul>\n<h3 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h3><blockquote>\n<p>域名在阿里云，服务器在腾讯云</p>\n</blockquote>\n<p>服务器使用了ubuntu 14</p>\n<h4 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h4><blockquote>\n<p>从入门到入门</p>\n</blockquote>\n<p>每次使用nginx都要相隔很久很久，导致每次都感觉是入门一样。上次配置完成后完全忘记了<code>server</code>模块配置地址，找了半天，一直以为nginx配置文件路径不对（主配置文件里面没有server配置，但是实际又生效了）</p>\n<p>而且在配置ssl的时候又着实sb了，把crt文件放到了配置文件夹，主配置文件引用了该文件夹下全部文件，导致会读取crt文件作为nagix配置文件一直测试不过，查遍各种都没找到问题，最后开始主入口配置文件的原因。</p>\n<p>ssl直接使用了腾讯云提供的免费dv协议</p>\n<h3 id=\"SEO\"><a href=\"#SEO\" class=\"headerlink\" title=\"SEO\"></a>SEO</h3><p>提交了百度统计，google网站认证。页面使用百度统计代码。</p>\n<h3 id=\"todo\"><a href=\"#todo\" class=\"headerlink\" title=\"todo\"></a>todo</h3><ul>\n<li>评论组件</li>\n</ul>"},{"title":"leetCode 记录（2）","_content":"## leetCode 记录（2）\n\n### Longest Substring Without Repeating Characters\n> [Longest Substring Without Repeating Characters](https://leetcode.com/problems/longest-substring-without-repeating-characters)\n\n### 初始思路\n\n* O(n^2)遍历数组\n* 把不重复的字符存入数组\n* 遇到重复的break\n* 遍历完成获取最后数组的长度\n\n<!-- more -->\n### 遇到问题\n\n* 时间复杂度问题\n\n### 结果\n\tfunction lengthOfLongestSubstring(s) {\n\t    const map = {};\n\t    var left = 0;\n\t    \n\t    return s.split('').reduce((max, v, i) => {\n\t        left = map[v] >= left ? map[v] + 1 : left;\n\t        map[v] = i;\n\t        return Math.max(max, i - left + 1);\n\t    }, 0);\n\t}\n\n### 思考\n* 上述代码核心是通过扫描求出最长解\n\t* 首先map作为储存每个字符的index位置的变量，left作为最长解的左边位置变量\n\t* 其次开始扫描整个字符串，给每个字符存储最后出现的位置在map中\n\t* 然后如果出现重复的字符，更新left位置为改字符上次出现的位置的下一个\n\t* 每次对比已经存储的最大长度与当前的不重复长度\n\n### TODO\n\n* 理解上述代码","source":"_posts/leetCode 记录（2）.md","raw":"title: leetCode 记录（2）\ncategories: 算法\n---\n## leetCode 记录（2）\n\n### Longest Substring Without Repeating Characters\n> [Longest Substring Without Repeating Characters](https://leetcode.com/problems/longest-substring-without-repeating-characters)\n\n### 初始思路\n\n* O(n^2)遍历数组\n* 把不重复的字符存入数组\n* 遇到重复的break\n* 遍历完成获取最后数组的长度\n\n<!-- more -->\n### 遇到问题\n\n* 时间复杂度问题\n\n### 结果\n\tfunction lengthOfLongestSubstring(s) {\n\t    const map = {};\n\t    var left = 0;\n\t    \n\t    return s.split('').reduce((max, v, i) => {\n\t        left = map[v] >= left ? map[v] + 1 : left;\n\t        map[v] = i;\n\t        return Math.max(max, i - left + 1);\n\t    }, 0);\n\t}\n\n### 思考\n* 上述代码核心是通过扫描求出最长解\n\t* 首先map作为储存每个字符的index位置的变量，left作为最长解的左边位置变量\n\t* 其次开始扫描整个字符串，给每个字符存储最后出现的位置在map中\n\t* 然后如果出现重复的字符，更新left位置为改字符上次出现的位置的下一个\n\t* 每次对比已经存储的最大长度与当前的不重复长度\n\n### TODO\n\n* 理解上述代码","slug":"leetCode 记录（2）","published":1,"date":"2017-03-07T11:34:22.000Z","updated":"2017-03-13T06:23:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnihn0009pw3a5kuib6gc","content":"<h2 id=\"leetCode-记录（2）\"><a href=\"#leetCode-记录（2）\" class=\"headerlink\" title=\"leetCode 记录（2）\"></a>leetCode 记录（2）</h2><h3 id=\"Longest-Substring-Without-Repeating-Characters\"><a href=\"#Longest-Substring-Without-Repeating-Characters\" class=\"headerlink\" title=\"Longest Substring Without Repeating Characters\"></a>Longest Substring Without Repeating Characters</h3><blockquote>\n<p><a href=\"https://leetcode.com/problems/longest-substring-without-repeating-characters\" target=\"_blank\" rel=\"external\">Longest Substring Without Repeating Characters</a></p>\n</blockquote>\n<h3 id=\"初始思路\"><a href=\"#初始思路\" class=\"headerlink\" title=\"初始思路\"></a>初始思路</h3><ul>\n<li>O(n^2)遍历数组</li>\n<li>把不重复的字符存入数组</li>\n<li>遇到重复的break</li>\n<li>遍历完成获取最后数组的长度</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><ul>\n<li>时间复杂度问题</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><pre><code>function lengthOfLongestSubstring(s) {\n    const map = {};\n    var left = 0;\n\n    return s.split(&apos;&apos;).reduce((max, v, i) =&gt; {\n        left = map[v] &gt;= left ? map[v] + 1 : left;\n        map[v] = i;\n        return Math.max(max, i - left + 1);\n    }, 0);\n}\n</code></pre><h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>上述代码核心是通过扫描求出最长解<ul>\n<li>首先map作为储存每个字符的index位置的变量，left作为最长解的左边位置变量</li>\n<li>其次开始扫描整个字符串，给每个字符存储最后出现的位置在map中</li>\n<li>然后如果出现重复的字符，更新left位置为改字符上次出现的位置的下一个</li>\n<li>每次对比已经存储的最大长度与当前的不重复长度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>理解上述代码</li>\n</ul>\n","excerpt":"<h2 id=\"leetCode-记录（2）\"><a href=\"#leetCode-记录（2）\" class=\"headerlink\" title=\"leetCode 记录（2）\"></a>leetCode 记录（2）</h2><h3 id=\"Longest-Substring-Without-Repeating-Characters\"><a href=\"#Longest-Substring-Without-Repeating-Characters\" class=\"headerlink\" title=\"Longest Substring Without Repeating Characters\"></a>Longest Substring Without Repeating Characters</h3><blockquote>\n<p><a href=\"https://leetcode.com/problems/longest-substring-without-repeating-characters\">Longest Substring Without Repeating Characters</a></p>\n</blockquote>\n<h3 id=\"初始思路\"><a href=\"#初始思路\" class=\"headerlink\" title=\"初始思路\"></a>初始思路</h3><ul>\n<li>O(n^2)遍历数组</li>\n<li>把不重复的字符存入数组</li>\n<li>遇到重复的break</li>\n<li>遍历完成获取最后数组的长度</li>\n</ul>","more":"<h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><ul>\n<li>时间复杂度问题</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><pre><code>function lengthOfLongestSubstring(s) {\n    const map = {};\n    var left = 0;\n\n    return s.split(&apos;&apos;).reduce((max, v, i) =&gt; {\n        left = map[v] &gt;= left ? map[v] + 1 : left;\n        map[v] = i;\n        return Math.max(max, i - left + 1);\n    }, 0);\n}\n</code></pre><h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>上述代码核心是通过扫描求出最长解<ul>\n<li>首先map作为储存每个字符的index位置的变量，left作为最长解的左边位置变量</li>\n<li>其次开始扫描整个字符串，给每个字符存储最后出现的位置在map中</li>\n<li>然后如果出现重复的字符，更新left位置为改字符上次出现的位置的下一个</li>\n<li>每次对比已经存储的最大长度与当前的不重复长度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><ul>\n<li>理解上述代码</li>\n</ul>"},{"title":"从爬虫来看再入门js正则表达式","_content":"## 从爬虫来看再入门js正则表达式\n\n### 前言\n\n最近有个需求，需要一体化爬一个页面数据，第一版的时候是通过在页面运行js脚本来遍历DOM来处理数据，由于要一体化，需要node去获取页面文档然后通过正则表达式去把需要的数据筛选出来。所以就再次入门js正则表达式。\n\n<!-- more -->\n### 匹配\n>对于Html文档来说，一般需要匹配的就是相应DOM结构，比如标签属性，内容和数目之类的。\n所以首先需要匹配出标签。\n\n拿一个简单的标签来说比如`<p>123</p>`，我们想要拿到`123`这个内容来用正则实现。\n这里要先补充一些需要使用的或者比较关键的正则关键词：\n\n* 自定义匹配多种字符 - `[ ]`\n\t* 使用方括号 [ ] 包含一系列字符，能够匹配其中任意一个字符。\n\t* 用 [^ ] 包含一系列字符，则能够匹配其中字符之外的任意一个字符。\n\t* 虽然可以匹配其中任意一个，但是只能是一个，不是多个。\n* 修饰匹配次数 - `{}`，`?`，`+`，`*`\n\t* **{n}** - 表达式重复n次，比如：\"/w{2}\" 相当于 \"/w/w\"；\"a{5}\" 相当于 \"aaaaa\"\n\t* **{m,n}** - 表达式至少重复m次，最多重复n次，比如：\"ba{1,3}\"可以匹配 \"ba\"或\"baa\"或\"baaa\"\n\t* **{m,}** - 表达式至少重复m次，比如：\"/w/d{2,}\"可以匹配 \"a12\",\"_456\",\"M12344\"...\n\t* **?** - 匹配表达式0次或者1次，相当于 {0,1}，比如：\"a[cd]?\"可以匹配 \"a\",\"ac\",\"ad\"\n\t* **+** - 表达式至少出现1次，相当于 {1,}，比如：\"a+b\"可以匹配 \"ab\",\"aab\",\"aaab\"...\n\t* **\\*** - 表达式不出现或出现任意次，相当于 {0,}，比如：\"/^*b\"可以匹配 \"b\",\"^^^b\"...\n* 用于group的字符 - `()`\n\t* 在被修饰匹配次数的时候，括号中的表达式可以作为整体被修饰\n\t* 取匹配结果的时候，括号中的表达式匹配到的内容可以被单独得到\n* 用于扩展表达式含义\n\t* **g**：代表可以进行全局匹配\n\t* **i**：代表不区分大小写匹配\n\t* **m**：代表可以进行多行匹配\n\n上面几个概念就是我们所需要的所有东西了。\n\n接下里开始匹配p标签并且取出里面的内容\n\t\t\n\t\t<p>123</p>\n\n使用下面的正则即可，其中非贪婪模式很简单的避免了多个相同标签时匹配不正确的问题，不过需要注意[性能问题](http://www.regexlab.com/zh/regtopic.htm#rel%0Ctant)\n\n\t\t/<p>(.*?)<\\/p>/\n\t\t\n如果要取出某些属性的标签比如\n\n\t\t<p id=\"321\">123</p>\n\n则可以使用如下正则\n\n\t\t/<p id=\"([^\"]*)\">(.*?)<\\/p>/\n\t\t\n这样就能够简单快速解决html里面各种标签的数据获取问题\n### 筛选\n> 对于匹配出来的数据，特别是我们需要全局匹配并且拿到想要数据的时候就需要继续通过筛选来拿出需要的数据。\n\n在JavaScript中，如果想要获取某次匹配的数据可以使用`String.match(RegExp)`方法。不过该方法只能获取一次的匹配结果，如果需要匹配大段文本中多次的结果就需要使用[`RegExp.exec(string)`](http://www.w3school.com.cn/jsref/jsref_exec_regexp.asp)方法进行匹配。\n\n所以如果我们需要拿到所有p标签的id和内容，可以使用如下代码\n\n\t\tvar html = '<p id=\"1\">a</p><p id=\"2\">b</p><p id=\"3\">c</p>'\n\t\tvar reg = /<p id=\"([^\"]*)\">(.*?)<\\/p>/g;\n\t\tvar result;\n\t\t\n\t\twhile ((result = reg.exec(html)) != null)  {\n\t\t  \tconsole.log(result[1],result[2])\n\t\t}\n\t\t//1 a\n\t\t//2 b\n\t\t//3 c\n\t\t\n至此，对于绝大部分网页内容分析筛选的工作都可以使用简单的正则快速的完成了。","source":"_posts/从爬虫来看再入门js正则表达式.md","raw":"title: 从爬虫来看再入门js正则表达式\ncategories: 前端\ntags:\n  - 正则表达式\n  - js\n---\n## 从爬虫来看再入门js正则表达式\n\n### 前言\n\n最近有个需求，需要一体化爬一个页面数据，第一版的时候是通过在页面运行js脚本来遍历DOM来处理数据，由于要一体化，需要node去获取页面文档然后通过正则表达式去把需要的数据筛选出来。所以就再次入门js正则表达式。\n\n<!-- more -->\n### 匹配\n>对于Html文档来说，一般需要匹配的就是相应DOM结构，比如标签属性，内容和数目之类的。\n所以首先需要匹配出标签。\n\n拿一个简单的标签来说比如`<p>123</p>`，我们想要拿到`123`这个内容来用正则实现。\n这里要先补充一些需要使用的或者比较关键的正则关键词：\n\n* 自定义匹配多种字符 - `[ ]`\n\t* 使用方括号 [ ] 包含一系列字符，能够匹配其中任意一个字符。\n\t* 用 [^ ] 包含一系列字符，则能够匹配其中字符之外的任意一个字符。\n\t* 虽然可以匹配其中任意一个，但是只能是一个，不是多个。\n* 修饰匹配次数 - `{}`，`?`，`+`，`*`\n\t* **{n}** - 表达式重复n次，比如：\"/w{2}\" 相当于 \"/w/w\"；\"a{5}\" 相当于 \"aaaaa\"\n\t* **{m,n}** - 表达式至少重复m次，最多重复n次，比如：\"ba{1,3}\"可以匹配 \"ba\"或\"baa\"或\"baaa\"\n\t* **{m,}** - 表达式至少重复m次，比如：\"/w/d{2,}\"可以匹配 \"a12\",\"_456\",\"M12344\"...\n\t* **?** - 匹配表达式0次或者1次，相当于 {0,1}，比如：\"a[cd]?\"可以匹配 \"a\",\"ac\",\"ad\"\n\t* **+** - 表达式至少出现1次，相当于 {1,}，比如：\"a+b\"可以匹配 \"ab\",\"aab\",\"aaab\"...\n\t* **\\*** - 表达式不出现或出现任意次，相当于 {0,}，比如：\"/^*b\"可以匹配 \"b\",\"^^^b\"...\n* 用于group的字符 - `()`\n\t* 在被修饰匹配次数的时候，括号中的表达式可以作为整体被修饰\n\t* 取匹配结果的时候，括号中的表达式匹配到的内容可以被单独得到\n* 用于扩展表达式含义\n\t* **g**：代表可以进行全局匹配\n\t* **i**：代表不区分大小写匹配\n\t* **m**：代表可以进行多行匹配\n\n上面几个概念就是我们所需要的所有东西了。\n\n接下里开始匹配p标签并且取出里面的内容\n\t\t\n\t\t<p>123</p>\n\n使用下面的正则即可，其中非贪婪模式很简单的避免了多个相同标签时匹配不正确的问题，不过需要注意[性能问题](http://www.regexlab.com/zh/regtopic.htm#rel%0Ctant)\n\n\t\t/<p>(.*?)<\\/p>/\n\t\t\n如果要取出某些属性的标签比如\n\n\t\t<p id=\"321\">123</p>\n\n则可以使用如下正则\n\n\t\t/<p id=\"([^\"]*)\">(.*?)<\\/p>/\n\t\t\n这样就能够简单快速解决html里面各种标签的数据获取问题\n### 筛选\n> 对于匹配出来的数据，特别是我们需要全局匹配并且拿到想要数据的时候就需要继续通过筛选来拿出需要的数据。\n\n在JavaScript中，如果想要获取某次匹配的数据可以使用`String.match(RegExp)`方法。不过该方法只能获取一次的匹配结果，如果需要匹配大段文本中多次的结果就需要使用[`RegExp.exec(string)`](http://www.w3school.com.cn/jsref/jsref_exec_regexp.asp)方法进行匹配。\n\n所以如果我们需要拿到所有p标签的id和内容，可以使用如下代码\n\n\t\tvar html = '<p id=\"1\">a</p><p id=\"2\">b</p><p id=\"3\">c</p>'\n\t\tvar reg = /<p id=\"([^\"]*)\">(.*?)<\\/p>/g;\n\t\tvar result;\n\t\t\n\t\twhile ((result = reg.exec(html)) != null)  {\n\t\t  \tconsole.log(result[1],result[2])\n\t\t}\n\t\t//1 a\n\t\t//2 b\n\t\t//3 c\n\t\t\n至此，对于绝大部分网页内容分析筛选的工作都可以使用简单的正则快速的完成了。","slug":"从爬虫来看再入门js正则表达式","published":1,"date":"2017-03-16T06:34:03.000Z","updated":"2017-03-16T06:35:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0ccnihy000dpw3a8r69lqiw","content":"<h2 id=\"从爬虫来看再入门js正则表达式\"><a href=\"#从爬虫来看再入门js正则表达式\" class=\"headerlink\" title=\"从爬虫来看再入门js正则表达式\"></a>从爬虫来看再入门js正则表达式</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近有个需求，需要一体化爬一个页面数据，第一版的时候是通过在页面运行js脚本来遍历DOM来处理数据，由于要一体化，需要node去获取页面文档然后通过正则表达式去把需要的数据筛选出来。所以就再次入门js正则表达式。</p>\n<a id=\"more\"></a>\n<h3 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h3><blockquote>\n<p>对于Html文档来说，一般需要匹配的就是相应DOM结构，比如标签属性，内容和数目之类的。<br>所以首先需要匹配出标签。</p>\n</blockquote>\n<p>拿一个简单的标签来说比如<code>&lt;p&gt;123&lt;/p&gt;</code>，我们想要拿到<code>123</code>这个内容来用正则实现。<br>这里要先补充一些需要使用的或者比较关键的正则关键词：</p>\n<ul>\n<li>自定义匹配多种字符 - <code>[ ]</code><ul>\n<li>使用方括号 [ ] 包含一系列字符，能够匹配其中任意一个字符。</li>\n<li>用 [^ ] 包含一系列字符，则能够匹配其中字符之外的任意一个字符。</li>\n<li>虽然可以匹配其中任意一个，但是只能是一个，不是多个。</li>\n</ul>\n</li>\n<li>修饰匹配次数 - <code>{}</code>，<code>?</code>，<code>+</code>，<code>*</code><ul>\n<li><strong>{n}</strong> - 表达式重复n次，比如：”/w{2}” 相当于 “/w/w”；”a{5}” 相当于 “aaaaa”</li>\n<li><strong>{m,n}</strong> - 表达式至少重复m次，最多重复n次，比如：”ba{1,3}”可以匹配 “ba”或”baa”或”baaa”</li>\n<li><strong>{m,}</strong> - 表达式至少重复m次，比如：”/w/d{2,}”可以匹配 “a12”,”_456”,”M12344”…</li>\n<li><strong>?</strong> - 匹配表达式0次或者1次，相当于 {0,1}，比如：”a[cd]?”可以匹配 “a”,”ac”,”ad”</li>\n<li><strong>+</strong> - 表达式至少出现1次，相当于 {1,}，比如：”a+b”可以匹配 “ab”,”aab”,”aaab”…</li>\n<li><strong>*</strong> - 表达式不出现或出现任意次，相当于 {0,}，比如：”/^*b”可以匹配 “b”,”^^^b”…</li>\n</ul>\n</li>\n<li>用于group的字符 - <code>()</code><ul>\n<li>在被修饰匹配次数的时候，括号中的表达式可以作为整体被修饰</li>\n<li>取匹配结果的时候，括号中的表达式匹配到的内容可以被单独得到</li>\n</ul>\n</li>\n<li>用于扩展表达式含义<ul>\n<li><strong>g</strong>：代表可以进行全局匹配</li>\n<li><strong>i</strong>：代表不区分大小写匹配</li>\n<li><strong>m</strong>：代表可以进行多行匹配</li>\n</ul>\n</li>\n</ul>\n<p>上面几个概念就是我们所需要的所有东西了。</p>\n<p>接下里开始匹配p标签并且取出里面的内容</p>\n<pre><code>&lt;p&gt;123&lt;/p&gt;\n</code></pre><p>使用下面的正则即可，其中非贪婪模式很简单的避免了多个相同标签时匹配不正确的问题，不过需要注意<a href=\"http://www.regexlab.com/zh/regtopic.htm#rel%0Ctant\" target=\"_blank\" rel=\"external\">性能问题</a></p>\n<pre><code>/&lt;p&gt;(.*?)&lt;\\/p&gt;/\n</code></pre><p>如果要取出某些属性的标签比如</p>\n<pre><code>&lt;p id=&quot;321&quot;&gt;123&lt;/p&gt;\n</code></pre><p>则可以使用如下正则</p>\n<pre><code>/&lt;p id=&quot;([^&quot;]*)&quot;&gt;(.*?)&lt;\\/p&gt;/\n</code></pre><p>这样就能够简单快速解决html里面各种标签的数据获取问题</p>\n<h3 id=\"筛选\"><a href=\"#筛选\" class=\"headerlink\" title=\"筛选\"></a>筛选</h3><blockquote>\n<p>对于匹配出来的数据，特别是我们需要全局匹配并且拿到想要数据的时候就需要继续通过筛选来拿出需要的数据。</p>\n</blockquote>\n<p>在JavaScript中，如果想要获取某次匹配的数据可以使用<code>String.match(RegExp)</code>方法。不过该方法只能获取一次的匹配结果，如果需要匹配大段文本中多次的结果就需要使用<a href=\"http://www.w3school.com.cn/jsref/jsref_exec_regexp.asp\" target=\"_blank\" rel=\"external\"><code>RegExp.exec(string)</code></a>方法进行匹配。</p>\n<p>所以如果我们需要拿到所有p标签的id和内容，可以使用如下代码</p>\n<pre><code>var html = &apos;&lt;p id=&quot;1&quot;&gt;a&lt;/p&gt;&lt;p id=&quot;2&quot;&gt;b&lt;/p&gt;&lt;p id=&quot;3&quot;&gt;c&lt;/p&gt;&apos;\nvar reg = /&lt;p id=&quot;([^&quot;]*)&quot;&gt;(.*?)&lt;\\/p&gt;/g;\nvar result;\n\nwhile ((result = reg.exec(html)) != null)  {\n      console.log(result[1],result[2])\n}\n//1 a\n//2 b\n//3 c\n</code></pre><p>至此，对于绝大部分网页内容分析筛选的工作都可以使用简单的正则快速的完成了。</p>\n","excerpt":"<h2 id=\"从爬虫来看再入门js正则表达式\"><a href=\"#从爬虫来看再入门js正则表达式\" class=\"headerlink\" title=\"从爬虫来看再入门js正则表达式\"></a>从爬虫来看再入门js正则表达式</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近有个需求，需要一体化爬一个页面数据，第一版的时候是通过在页面运行js脚本来遍历DOM来处理数据，由于要一体化，需要node去获取页面文档然后通过正则表达式去把需要的数据筛选出来。所以就再次入门js正则表达式。</p>","more":"<h3 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h3><blockquote>\n<p>对于Html文档来说，一般需要匹配的就是相应DOM结构，比如标签属性，内容和数目之类的。<br>所以首先需要匹配出标签。</p>\n</blockquote>\n<p>拿一个简单的标签来说比如<code>&lt;p&gt;123&lt;/p&gt;</code>，我们想要拿到<code>123</code>这个内容来用正则实现。<br>这里要先补充一些需要使用的或者比较关键的正则关键词：</p>\n<ul>\n<li>自定义匹配多种字符 - <code>[ ]</code><ul>\n<li>使用方括号 [ ] 包含一系列字符，能够匹配其中任意一个字符。</li>\n<li>用 [^ ] 包含一系列字符，则能够匹配其中字符之外的任意一个字符。</li>\n<li>虽然可以匹配其中任意一个，但是只能是一个，不是多个。</li>\n</ul>\n</li>\n<li>修饰匹配次数 - <code>{}</code>，<code>?</code>，<code>+</code>，<code>*</code><ul>\n<li><strong>{n}</strong> - 表达式重复n次，比如：”/w{2}” 相当于 “/w/w”；”a{5}” 相当于 “aaaaa”</li>\n<li><strong>{m,n}</strong> - 表达式至少重复m次，最多重复n次，比如：”ba{1,3}”可以匹配 “ba”或”baa”或”baaa”</li>\n<li><strong>{m,}</strong> - 表达式至少重复m次，比如：”/w/d{2,}”可以匹配 “a12”,”_456”,”M12344”…</li>\n<li><strong>?</strong> - 匹配表达式0次或者1次，相当于 {0,1}，比如：”a[cd]?”可以匹配 “a”,”ac”,”ad”</li>\n<li><strong>+</strong> - 表达式至少出现1次，相当于 {1,}，比如：”a+b”可以匹配 “ab”,”aab”,”aaab”…</li>\n<li><strong>*</strong> - 表达式不出现或出现任意次，相当于 {0,}，比如：”/^*b”可以匹配 “b”,”^^^b”…</li>\n</ul>\n</li>\n<li>用于group的字符 - <code>()</code><ul>\n<li>在被修饰匹配次数的时候，括号中的表达式可以作为整体被修饰</li>\n<li>取匹配结果的时候，括号中的表达式匹配到的内容可以被单独得到</li>\n</ul>\n</li>\n<li>用于扩展表达式含义<ul>\n<li><strong>g</strong>：代表可以进行全局匹配</li>\n<li><strong>i</strong>：代表不区分大小写匹配</li>\n<li><strong>m</strong>：代表可以进行多行匹配</li>\n</ul>\n</li>\n</ul>\n<p>上面几个概念就是我们所需要的所有东西了。</p>\n<p>接下里开始匹配p标签并且取出里面的内容</p>\n<pre><code>&lt;p&gt;123&lt;/p&gt;\n</code></pre><p>使用下面的正则即可，其中非贪婪模式很简单的避免了多个相同标签时匹配不正确的问题，不过需要注意<a href=\"http://www.regexlab.com/zh/regtopic.htm#rel%0Ctant\">性能问题</a></p>\n<pre><code>/&lt;p&gt;(.*?)&lt;\\/p&gt;/\n</code></pre><p>如果要取出某些属性的标签比如</p>\n<pre><code>&lt;p id=&quot;321&quot;&gt;123&lt;/p&gt;\n</code></pre><p>则可以使用如下正则</p>\n<pre><code>/&lt;p id=&quot;([^&quot;]*)&quot;&gt;(.*?)&lt;\\/p&gt;/\n</code></pre><p>这样就能够简单快速解决html里面各种标签的数据获取问题</p>\n<h3 id=\"筛选\"><a href=\"#筛选\" class=\"headerlink\" title=\"筛选\"></a>筛选</h3><blockquote>\n<p>对于匹配出来的数据，特别是我们需要全局匹配并且拿到想要数据的时候就需要继续通过筛选来拿出需要的数据。</p>\n</blockquote>\n<p>在JavaScript中，如果想要获取某次匹配的数据可以使用<code>String.match(RegExp)</code>方法。不过该方法只能获取一次的匹配结果，如果需要匹配大段文本中多次的结果就需要使用<a href=\"http://www.w3school.com.cn/jsref/jsref_exec_regexp.asp\"><code>RegExp.exec(string)</code></a>方法进行匹配。</p>\n<p>所以如果我们需要拿到所有p标签的id和内容，可以使用如下代码</p>\n<pre><code>var html = &apos;&lt;p id=&quot;1&quot;&gt;a&lt;/p&gt;&lt;p id=&quot;2&quot;&gt;b&lt;/p&gt;&lt;p id=&quot;3&quot;&gt;c&lt;/p&gt;&apos;\nvar reg = /&lt;p id=&quot;([^&quot;]*)&quot;&gt;(.*?)&lt;\\/p&gt;/g;\nvar result;\n\nwhile ((result = reg.exec(html)) != null)  {\n      console.log(result[1],result[2])\n}\n//1 a\n//2 b\n//3 c\n</code></pre><p>至此，对于绝大部分网页内容分析筛选的工作都可以使用简单的正则快速的完成了。</p>"},{"title":"rgba颜色转化","_content":"\n## rgba颜色转化\n\n### 前言\n\n有的时候拿到设计稿会发现设计师在对一些非透明的元素标注时使用rgba的颜色，在实际使用中需要把它们转换成十六进制颜色或者其他非含有透明度色值。\n\n<!-- more -->\n### 转化\n\nrgba是在rgb色值的基础上添加了透明度`a`通道的颜色，它通常等同于相应的rgb颜色外加`opacity`属性作为替代`a`通道。所以如果需要把它转化成非透明颜色就**需要考虑到它的底色作为一个整合**。\n\n我们一般拿底色作为一个底色，这个底色一般使用白色或者黑色。然后通过下面的公式来叠加底色与rgba源色算出叠加后的rgb色值。\n\n\t\tSource => Target = (BGColor + Source) =\n\t\tTarget.R = ((1 - Source.A) * BGColor.R) + (Source.A * Source.R)\n\t\tTarget.G = ((1 - Source.A) * BGColor.G) + (Source.A * Source.G)\n\t\tTarget.B = ((1 - Source.A) * BGColor.B) + (Source.A * Source.B)\n\t\t\n比如，底色为白色，`BGColor`的R,G,B通道都是**255**，源色为`rgba(50,240,100,.4)`，那么公式核算出颜色就是`rgb(173,249,193)`。如果底色是黑色，则核算出的颜色为`rgb(20,96,40)`。\n\n### demo\n\n使用[**color-transform**](https://www.x-yao.com/color-transform.html)可以进行rgb，rgba，十六进制色值的相互转化，比如rgba可以转化成十六进制和rgb，十六进制和rgb之间可以相互转化。\n\n**github地址**:[https://github.com/x-yao/color-transform](https://github.com/x-yao/color-transform)","source":"_posts/rgba颜色转化.md","raw":"title: rgba颜色转化\ncategories: 前端\ntags:\n  - rgba\n---\n\n## rgba颜色转化\n\n### 前言\n\n有的时候拿到设计稿会发现设计师在对一些非透明的元素标注时使用rgba的颜色，在实际使用中需要把它们转换成十六进制颜色或者其他非含有透明度色值。\n\n<!-- more -->\n### 转化\n\nrgba是在rgb色值的基础上添加了透明度`a`通道的颜色，它通常等同于相应的rgb颜色外加`opacity`属性作为替代`a`通道。所以如果需要把它转化成非透明颜色就**需要考虑到它的底色作为一个整合**。\n\n我们一般拿底色作为一个底色，这个底色一般使用白色或者黑色。然后通过下面的公式来叠加底色与rgba源色算出叠加后的rgb色值。\n\n\t\tSource => Target = (BGColor + Source) =\n\t\tTarget.R = ((1 - Source.A) * BGColor.R) + (Source.A * Source.R)\n\t\tTarget.G = ((1 - Source.A) * BGColor.G) + (Source.A * Source.G)\n\t\tTarget.B = ((1 - Source.A) * BGColor.B) + (Source.A * Source.B)\n\t\t\n比如，底色为白色，`BGColor`的R,G,B通道都是**255**，源色为`rgba(50,240,100,.4)`，那么公式核算出颜色就是`rgb(173,249,193)`。如果底色是黑色，则核算出的颜色为`rgb(20,96,40)`。\n\n### demo\n\n使用[**color-transform**](https://www.x-yao.com/color-transform.html)可以进行rgb，rgba，十六进制色值的相互转化，比如rgba可以转化成十六进制和rgb，十六进制和rgb之间可以相互转化。\n\n**github地址**:[https://github.com/x-yao/color-transform](https://github.com/x-yao/color-transform)","slug":"rgba颜色转化","published":1,"date":"2017-03-20T03:58:17.000Z","updated":"2017-03-21T10:06:38.000Z","_id":"cj0hlapo80000x13apwr4gq4e","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"rgba颜色转化\"><a href=\"#rgba颜色转化\" class=\"headerlink\" title=\"rgba颜色转化\"></a>rgba颜色转化</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>有的时候拿到设计稿会发现设计师在对一些非透明的元素标注时使用rgba的颜色，在实际使用中需要把它们转换成十六进制颜色或者其他非含有透明度色值。</p>\n<a id=\"more\"></a>\n<h3 id=\"转化\"><a href=\"#转化\" class=\"headerlink\" title=\"转化\"></a>转化</h3><p>rgba是在rgb色值的基础上添加了透明度<code>a</code>通道的颜色，它通常等同于相应的rgb颜色外加<code>opacity</code>属性作为替代<code>a</code>通道。所以如果需要把它转化成非透明颜色就<strong>需要考虑到它的底色作为一个整合</strong>。</p>\n<p>我们一般拿底色作为一个底色，这个底色一般使用白色或者黑色。然后通过下面的公式来叠加底色与rgba源色算出叠加后的rgb色值。</p>\n<pre><code>Source =&gt; Target = (BGColor + Source) =\nTarget.R = ((1 - Source.A) * BGColor.R) + (Source.A * Source.R)\nTarget.G = ((1 - Source.A) * BGColor.G) + (Source.A * Source.G)\nTarget.B = ((1 - Source.A) * BGColor.B) + (Source.A * Source.B)\n</code></pre><p>比如，底色为白色，<code>BGColor</code>的R,G,B通道都是<strong>255</strong>，源色为<code>rgba(50,240,100,.4)</code>，那么公式核算出颜色就是<code>rgb(173,249,193)</code>。如果底色是黑色，则核算出的颜色为<code>rgb(20,96,40)</code>。</p>\n<h3 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h3><p>使用<a href=\"https://www.x-yao.com/color-transform.html\"><strong>color-transform</strong></a>可以进行rgb，rgba，十六进制色值的相互转化，比如rgba可以转化成十六进制和rgb，十六进制和rgb之间可以相互转化。</p>\n<p><strong>github地址</strong>:<a href=\"https://github.com/x-yao/color-transform\" target=\"_blank\" rel=\"external\">https://github.com/x-yao/color-transform</a></p>\n","excerpt":"<h2 id=\"rgba颜色转化\"><a href=\"#rgba颜色转化\" class=\"headerlink\" title=\"rgba颜色转化\"></a>rgba颜色转化</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>有的时候拿到设计稿会发现设计师在对一些非透明的元素标注时使用rgba的颜色，在实际使用中需要把它们转换成十六进制颜色或者其他非含有透明度色值。</p>","more":"<h3 id=\"转化\"><a href=\"#转化\" class=\"headerlink\" title=\"转化\"></a>转化</h3><p>rgba是在rgb色值的基础上添加了透明度<code>a</code>通道的颜色，它通常等同于相应的rgb颜色外加<code>opacity</code>属性作为替代<code>a</code>通道。所以如果需要把它转化成非透明颜色就<strong>需要考虑到它的底色作为一个整合</strong>。</p>\n<p>我们一般拿底色作为一个底色，这个底色一般使用白色或者黑色。然后通过下面的公式来叠加底色与rgba源色算出叠加后的rgb色值。</p>\n<pre><code>Source =&gt; Target = (BGColor + Source) =\nTarget.R = ((1 - Source.A) * BGColor.R) + (Source.A * Source.R)\nTarget.G = ((1 - Source.A) * BGColor.G) + (Source.A * Source.G)\nTarget.B = ((1 - Source.A) * BGColor.B) + (Source.A * Source.B)\n</code></pre><p>比如，底色为白色，<code>BGColor</code>的R,G,B通道都是<strong>255</strong>，源色为<code>rgba(50,240,100,.4)</code>，那么公式核算出颜色就是<code>rgb(173,249,193)</code>。如果底色是黑色，则核算出的颜色为<code>rgb(20,96,40)</code>。</p>\n<h3 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h3><p>使用<a href=\"https://www.x-yao.com/color-transform.html\"><strong>color-transform</strong></a>可以进行rgb，rgba，十六进制色值的相互转化，比如rgba可以转化成十六进制和rgb，十六进制和rgb之间可以相互转化。</p>\n<p><strong>github地址</strong>:<a href=\"https://github.com/x-yao/color-transform\">https://github.com/x-yao/color-transform</a></p>"},{"title":"Vue 组件化（2）","_content":"\n## Vue组件化（2）\n\n> 这里谈谈业务组件与工具组件和UI组件3方面\n\n<!-- more -->\n### 业务组件\n> 业务组件是指在业务中需要抽象或者抽离的可复用的包涵业务逻辑的组件\n\n在复杂的页面开发中经常会遇到一些页面包涵很多复杂交互，如果在一个vue组件里面去做整个页面开发会导致代码量过大日后难以维护，所以需要将**一些相对功能独立但是逻辑复杂的模块**抽离成一个个的业务组件。\n\n一方面业务组件可以作为可复用的模块**在各个页面中重复利用**，而且在相同功能下需要迭代的时候也能够改一处而其他地方同步。另一方面能够理清页面脉络，**避免同一个.vue文件中代码量太大**难以阅读。\n\n**如何做好业务组件：**\n\n* 页面开发时分割业务模块至不同的.vue文件中\n* 逻辑相对独立模块需考虑扩展性-比如上传，展示，导出等交互一致视觉一致的模块\n* 慎复制代码多抽离模块\n* 业务组件内部逻辑独立，与页面其他功能尽量解耦\n\n### 工具组件\n> 工具组件是指项目中的一些公用方法，逻辑等\n\n工具组件相当于项目中常用的util方法，很多方法会在各个vue文件中重复利用到，比如获取url参数，常用格式转换等等。这些方法之前使用import在各个vue组件中调用，后续发现每次还是需要引用，其实可以通过插件的形式对常用方法添加到全局vue实例中，避免在每个vue组件中引入调用。\n\n核心思路是vue的[插件方法](https://cn.vuejs.org/v2/guide/plugins.html)\n\n在工具组件中设定初始化方法，将util方法注入到vue的**实例方法**中。\n\n\t\tUtil.install = function (Vue, options) {\n\t\t  添加实例方法\n\t\t  Vue.prototype.$myMethod = function (options) {\n\t\t    // 逻辑...\n\t\t  }\n\t\t}\n\t\t\n然后在入口页面通过全局方法使用插件\n\n\t\tVue.use(Util)\n\n这样在改实例下的所有vue组件都能使用该实例方法。\n\n### UI组件\n> 颗粒化的包涵独立功能的组件\n\nUI组件是组件化中比较重要的一个环节也是需要考量最多的组件，这里只是谈一谈UI组件的CSS相关。\n\nUI组件包含了一个默认的样式，这个样式在绝大部分情况下可以不用修改，但是还是要考虑到特殊情况的**样式可覆盖性**。所以在UI组件中推荐使用[**BEM**](http://getbem.com/introduction/)方式进行css命名。\n\n使用BEM可以减少样式嵌套，增强可读性，同时也使得组件样式更佳易于被覆盖。也可以优化选择器性能。同时还能减少命名冲突增强服用性。\n\n\n","source":"_posts/Vue组件化（2）.md","raw":"title: Vue 组件化（2）\ncategories: 前端\ntags:\n  - vue\n---\n\n## Vue组件化（2）\n\n> 这里谈谈业务组件与工具组件和UI组件3方面\n\n<!-- more -->\n### 业务组件\n> 业务组件是指在业务中需要抽象或者抽离的可复用的包涵业务逻辑的组件\n\n在复杂的页面开发中经常会遇到一些页面包涵很多复杂交互，如果在一个vue组件里面去做整个页面开发会导致代码量过大日后难以维护，所以需要将**一些相对功能独立但是逻辑复杂的模块**抽离成一个个的业务组件。\n\n一方面业务组件可以作为可复用的模块**在各个页面中重复利用**，而且在相同功能下需要迭代的时候也能够改一处而其他地方同步。另一方面能够理清页面脉络，**避免同一个.vue文件中代码量太大**难以阅读。\n\n**如何做好业务组件：**\n\n* 页面开发时分割业务模块至不同的.vue文件中\n* 逻辑相对独立模块需考虑扩展性-比如上传，展示，导出等交互一致视觉一致的模块\n* 慎复制代码多抽离模块\n* 业务组件内部逻辑独立，与页面其他功能尽量解耦\n\n### 工具组件\n> 工具组件是指项目中的一些公用方法，逻辑等\n\n工具组件相当于项目中常用的util方法，很多方法会在各个vue文件中重复利用到，比如获取url参数，常用格式转换等等。这些方法之前使用import在各个vue组件中调用，后续发现每次还是需要引用，其实可以通过插件的形式对常用方法添加到全局vue实例中，避免在每个vue组件中引入调用。\n\n核心思路是vue的[插件方法](https://cn.vuejs.org/v2/guide/plugins.html)\n\n在工具组件中设定初始化方法，将util方法注入到vue的**实例方法**中。\n\n\t\tUtil.install = function (Vue, options) {\n\t\t  添加实例方法\n\t\t  Vue.prototype.$myMethod = function (options) {\n\t\t    // 逻辑...\n\t\t  }\n\t\t}\n\t\t\n然后在入口页面通过全局方法使用插件\n\n\t\tVue.use(Util)\n\n这样在改实例下的所有vue组件都能使用该实例方法。\n\n### UI组件\n> 颗粒化的包涵独立功能的组件\n\nUI组件是组件化中比较重要的一个环节也是需要考量最多的组件，这里只是谈一谈UI组件的CSS相关。\n\nUI组件包含了一个默认的样式，这个样式在绝大部分情况下可以不用修改，但是还是要考虑到特殊情况的**样式可覆盖性**。所以在UI组件中推荐使用[**BEM**](http://getbem.com/introduction/)方式进行css命名。\n\n使用BEM可以减少样式嵌套，增强可读性，同时也使得组件样式更佳易于被覆盖。也可以优化选择器性能。同时还能减少命名冲突增强服用性。\n\n\n","slug":"Vue组件化（2）","published":1,"date":"2017-03-21T09:58:16.000Z","updated":"2017-03-21T10:01:24.000Z","_id":"cj0jdb6al0000hsfyngxfmfb4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Vue组件化（2）\"><a href=\"#Vue组件化（2）\" class=\"headerlink\" title=\"Vue组件化（2）\"></a>Vue组件化（2）</h2><blockquote>\n<p>这里谈谈业务组件与工具组件和UI组件3方面</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"业务组件\"><a href=\"#业务组件\" class=\"headerlink\" title=\"业务组件\"></a>业务组件</h3><blockquote>\n<p>业务组件是指在业务中需要抽象或者抽离的可复用的包涵业务逻辑的组件</p>\n</blockquote>\n<p>在复杂的页面开发中经常会遇到一些页面包涵很多复杂交互，如果在一个vue组件里面去做整个页面开发会导致代码量过大日后难以维护，所以需要将<strong>一些相对功能独立但是逻辑复杂的模块</strong>抽离成一个个的业务组件。</p>\n<p>一方面业务组件可以作为可复用的模块<strong>在各个页面中重复利用</strong>，而且在相同功能下需要迭代的时候也能够改一处而其他地方同步。另一方面能够理清页面脉络，<strong>避免同一个.vue文件中代码量太大</strong>难以阅读。</p>\n<p><strong>如何做好业务组件：</strong></p>\n<ul>\n<li>页面开发时分割业务模块至不同的.vue文件中</li>\n<li>逻辑相对独立模块需考虑扩展性-比如上传，展示，导出等交互一致视觉一致的模块</li>\n<li>慎复制代码多抽离模块</li>\n<li>业务组件内部逻辑独立，与页面其他功能尽量解耦</li>\n</ul>\n<h3 id=\"工具组件\"><a href=\"#工具组件\" class=\"headerlink\" title=\"工具组件\"></a>工具组件</h3><blockquote>\n<p>工具组件是指项目中的一些公用方法，逻辑等</p>\n</blockquote>\n<p>工具组件相当于项目中常用的util方法，很多方法会在各个vue文件中重复利用到，比如获取url参数，常用格式转换等等。这些方法之前使用import在各个vue组件中调用，后续发现每次还是需要引用，其实可以通过插件的形式对常用方法添加到全局vue实例中，避免在每个vue组件中引入调用。</p>\n<p>核心思路是vue的<a href=\"https://cn.vuejs.org/v2/guide/plugins.html\" target=\"_blank\" rel=\"external\">插件方法</a></p>\n<p>在工具组件中设定初始化方法，将util方法注入到vue的<strong>实例方法</strong>中。</p>\n<pre><code>Util.install = function (Vue, options) {\n  添加实例方法\n  Vue.prototype.$myMethod = function (options) {\n    // 逻辑...\n  }\n}\n</code></pre><p>然后在入口页面通过全局方法使用插件</p>\n<pre><code>Vue.use(Util)\n</code></pre><p>这样在改实例下的所有vue组件都能使用该实例方法。</p>\n<h3 id=\"UI组件\"><a href=\"#UI组件\" class=\"headerlink\" title=\"UI组件\"></a>UI组件</h3><blockquote>\n<p>颗粒化的包涵独立功能的组件</p>\n</blockquote>\n<p>UI组件是组件化中比较重要的一个环节也是需要考量最多的组件，这里只是谈一谈UI组件的CSS相关。</p>\n<p>UI组件包含了一个默认的样式，这个样式在绝大部分情况下可以不用修改，但是还是要考虑到特殊情况的<strong>样式可覆盖性</strong>。所以在UI组件中推荐使用<a href=\"http://getbem.com/introduction/\" target=\"_blank\" rel=\"external\"><strong>BEM</strong></a>方式进行css命名。</p>\n<p>使用BEM可以减少样式嵌套，增强可读性，同时也使得组件样式更佳易于被覆盖。也可以优化选择器性能。同时还能减少命名冲突增强服用性。</p>\n","excerpt":"<h2 id=\"Vue组件化（2）\"><a href=\"#Vue组件化（2）\" class=\"headerlink\" title=\"Vue组件化（2）\"></a>Vue组件化（2）</h2><blockquote>\n<p>这里谈谈业务组件与工具组件和UI组件3方面</p>\n</blockquote>","more":"<h3 id=\"业务组件\"><a href=\"#业务组件\" class=\"headerlink\" title=\"业务组件\"></a>业务组件</h3><blockquote>\n<p>业务组件是指在业务中需要抽象或者抽离的可复用的包涵业务逻辑的组件</p>\n</blockquote>\n<p>在复杂的页面开发中经常会遇到一些页面包涵很多复杂交互，如果在一个vue组件里面去做整个页面开发会导致代码量过大日后难以维护，所以需要将<strong>一些相对功能独立但是逻辑复杂的模块</strong>抽离成一个个的业务组件。</p>\n<p>一方面业务组件可以作为可复用的模块<strong>在各个页面中重复利用</strong>，而且在相同功能下需要迭代的时候也能够改一处而其他地方同步。另一方面能够理清页面脉络，<strong>避免同一个.vue文件中代码量太大</strong>难以阅读。</p>\n<p><strong>如何做好业务组件：</strong></p>\n<ul>\n<li>页面开发时分割业务模块至不同的.vue文件中</li>\n<li>逻辑相对独立模块需考虑扩展性-比如上传，展示，导出等交互一致视觉一致的模块</li>\n<li>慎复制代码多抽离模块</li>\n<li>业务组件内部逻辑独立，与页面其他功能尽量解耦</li>\n</ul>\n<h3 id=\"工具组件\"><a href=\"#工具组件\" class=\"headerlink\" title=\"工具组件\"></a>工具组件</h3><blockquote>\n<p>工具组件是指项目中的一些公用方法，逻辑等</p>\n</blockquote>\n<p>工具组件相当于项目中常用的util方法，很多方法会在各个vue文件中重复利用到，比如获取url参数，常用格式转换等等。这些方法之前使用import在各个vue组件中调用，后续发现每次还是需要引用，其实可以通过插件的形式对常用方法添加到全局vue实例中，避免在每个vue组件中引入调用。</p>\n<p>核心思路是vue的<a href=\"https://cn.vuejs.org/v2/guide/plugins.html\">插件方法</a></p>\n<p>在工具组件中设定初始化方法，将util方法注入到vue的<strong>实例方法</strong>中。</p>\n<pre><code>Util.install = function (Vue, options) {\n  添加实例方法\n  Vue.prototype.$myMethod = function (options) {\n    // 逻辑...\n  }\n}\n</code></pre><p>然后在入口页面通过全局方法使用插件</p>\n<pre><code>Vue.use(Util)\n</code></pre><p>这样在改实例下的所有vue组件都能使用该实例方法。</p>\n<h3 id=\"UI组件\"><a href=\"#UI组件\" class=\"headerlink\" title=\"UI组件\"></a>UI组件</h3><blockquote>\n<p>颗粒化的包涵独立功能的组件</p>\n</blockquote>\n<p>UI组件是组件化中比较重要的一个环节也是需要考量最多的组件，这里只是谈一谈UI组件的CSS相关。</p>\n<p>UI组件包含了一个默认的样式，这个样式在绝大部分情况下可以不用修改，但是还是要考虑到特殊情况的<strong>样式可覆盖性</strong>。所以在UI组件中推荐使用<a href=\"http://getbem.com/introduction/\"><strong>BEM</strong></a>方式进行css命名。</p>\n<p>使用BEM可以减少样式嵌套，增强可读性，同时也使得组件样式更佳易于被覆盖。也可以优化选择器性能。同时还能减少命名冲突增强服用性。</p>"},{"title":"如何使用webpack2进行Tree Shaking","_content":"\n## 如何使用webpack2进行Tree Shaking\n\n> 这篇文章设定读者有一定的webpack基础能够使用webpack2进行基本项目配置。所以具体的配置等没有详细说明，着重说明Tree Shaking这一特性在webpack2中的使用。\n\n### Tree Shaking\n> 消灭没有用到的代码\n\n**Tree Shaking**这个词最早听说于`rollup.js`，这个功能能够通过基于ES6 modules的静态特性做检测来找出未使用的代码。然后配合`uglifyjs`把无用代码“筛选”掉。\n\n<!-- more -->\n比如在如下场景下：\n\n**util.js**\n\n        export const foo = function () {\n\t        return 1\n        }\n\n        export const bar = function () {\n\t        return 2\n        }\n\n        export const foobar = function () {\n\t        return 3\n        }\n        \n**bar.js**\n    \n       import {bar} from './util'\n       const a = bar();\n       \n我们使用`foo.js`作为入口文件，自然希望webpack编译后只把`util.js`里面的`bar`变量引入到最终生成的文件，而其他没有用掉的能够被“优化”掉。Tree Shaking就是为了解决上述问题。\n\n最通常的情况就是我们项目中有某个公用方法文件，但是可能不同入口文件能够使用的方法很有限，这样会产生很多无用的方法打包到最后的文件当中。Tree Shaking则能够移除由此产生的大量冗余代码，达到优化的目的。\n\n### 在webpack2中使用Tree Shaking\n\n#### 基础使用\n还是以上述两个代码作为例子。设置`bar`作为入口文件，最后编译出的代码如下：\n\n\t\t\"use strict\";\n\t\tconst foo = function () {\n\t\t\treturn 1\n\t\t}\n\t\t/* unused harmony export foo */\n\t\t\n\t\t\n\t\tconst bar = function () {\n\t\t\treturn 2\n\t\t}\n\t\t/* harmony export (immutable) */ __webpack_exports__[\"a\"] = bar;\n\t\t\n\t\t\n\t\tconst foobar = function () {\n\t\t\treturn 3\n\t\t}\n\t\t/* unused harmony export foobar */\n\n可见`foo`,`foobar `这两个变量已经被定义为**unused**而未exports出来，再经过**压缩**后便没有了这两个变量的代码。\n\n#### 配合Babel\n> 移除`CommonJS`模块\n\n在实际生产环境当中我们通常使用`babel`来编译模块化代码，但是初次使用会发现当配合`babel`是会导致`Tree Shaking`失效，原因大多是因为**使用了`CommonJS`编译模块**导致webpack基于ES6 modules的静态分析失效。所以我们需要在`babel`配置中**去掉`CommonJS`模块**。\n比如使用如下配置：\n\n\t\tplugins: [  \n\t\t\t        'transform-es2015-template-literals',  \n\t\t\t        'transform-es2015-literals',  \n\t\t\t        'transform-es2015-function-name',  \n\t\t\t        'transform-es2015-arrow-functions',  \n\t\t\t        'transform-es2015-block-scoped-functions',  \n\t\t\t        'transform-es2015-classes',  \n\t\t\t        'transform-es2015-object-super',  \n\t\t\t        'transform-es2015-shorthand-properties',  \n\t\t\t        'transform-es2015-computed-properties',  \n\t\t\t        'transform-es2015-for-of',  \n\t\t\t        'transform-es2015-sticky-regex',  \n\t\t\t        'transform-es2015-unicode-regex',  \n\t\t\t        'check-es2015-constants',  \n\t\t\t        'transform-es2015-spread',  \n\t\t\t        'transform-es2015-parameters',  \n\t\t\t        'transform-es2015-destructuring',  \n\t\t\t        'transform-es2015-block-scoping',  \n\t\t\t        'transform-es2015-typeof-symbol',  \n\t\t\t        ['transform-regenerator', {async: false, asyncGenerators: false}]\n\t\t\t    ]\n\n#### 配合多入口文件\n> 多入口文件多webpack配置\n\n有些情况下我们的webpack入口文件有多个，一般情况我们会设置多入口文件也就是在`entry`属性中设置一个入口文件列表的map映射。但是在此情况下需要使用Tree Shaking可能遇到一些问题，详见[Webpack2 with mutli-file entry tree-shaking not behave as expected](https://github.com/webpack/webpack/issues/4353)。\n\n根据开发者回答是现阶段限制就是这样，需要使用多配置文件进行配置。也就是说，多入口文件相当于如下：\n\n![](https://img.kuaidadi.com/cms/img/upload_6c65d0dcb41eabff3e01245ca8fc671c.png)\n\n换成多配置文件就要替换成如下结构：\n\n![](https://img.kuaidadi.com/cms/img/upload_1b072a8f87a53e0ff08e16d7714b1068.png)\n\n这样就能够达到需求。详见demo：[webpack-tree-shaking-demo](https://github.com/x-yao/webpack-tree-shaking-demo)\n\n\n","source":"_posts/如何使用webpack2进行Tree Shaking.md","raw":"title: 如何使用webpack2进行Tree Shaking\ncategories: 前端\ntags:\n  - webpack\n  - babel\n---\n\n## 如何使用webpack2进行Tree Shaking\n\n> 这篇文章设定读者有一定的webpack基础能够使用webpack2进行基本项目配置。所以具体的配置等没有详细说明，着重说明Tree Shaking这一特性在webpack2中的使用。\n\n### Tree Shaking\n> 消灭没有用到的代码\n\n**Tree Shaking**这个词最早听说于`rollup.js`，这个功能能够通过基于ES6 modules的静态特性做检测来找出未使用的代码。然后配合`uglifyjs`把无用代码“筛选”掉。\n\n<!-- more -->\n比如在如下场景下：\n\n**util.js**\n\n        export const foo = function () {\n\t        return 1\n        }\n\n        export const bar = function () {\n\t        return 2\n        }\n\n        export const foobar = function () {\n\t        return 3\n        }\n        \n**bar.js**\n    \n       import {bar} from './util'\n       const a = bar();\n       \n我们使用`foo.js`作为入口文件，自然希望webpack编译后只把`util.js`里面的`bar`变量引入到最终生成的文件，而其他没有用掉的能够被“优化”掉。Tree Shaking就是为了解决上述问题。\n\n最通常的情况就是我们项目中有某个公用方法文件，但是可能不同入口文件能够使用的方法很有限，这样会产生很多无用的方法打包到最后的文件当中。Tree Shaking则能够移除由此产生的大量冗余代码，达到优化的目的。\n\n### 在webpack2中使用Tree Shaking\n\n#### 基础使用\n还是以上述两个代码作为例子。设置`bar`作为入口文件，最后编译出的代码如下：\n\n\t\t\"use strict\";\n\t\tconst foo = function () {\n\t\t\treturn 1\n\t\t}\n\t\t/* unused harmony export foo */\n\t\t\n\t\t\n\t\tconst bar = function () {\n\t\t\treturn 2\n\t\t}\n\t\t/* harmony export (immutable) */ __webpack_exports__[\"a\"] = bar;\n\t\t\n\t\t\n\t\tconst foobar = function () {\n\t\t\treturn 3\n\t\t}\n\t\t/* unused harmony export foobar */\n\n可见`foo`,`foobar `这两个变量已经被定义为**unused**而未exports出来，再经过**压缩**后便没有了这两个变量的代码。\n\n#### 配合Babel\n> 移除`CommonJS`模块\n\n在实际生产环境当中我们通常使用`babel`来编译模块化代码，但是初次使用会发现当配合`babel`是会导致`Tree Shaking`失效，原因大多是因为**使用了`CommonJS`编译模块**导致webpack基于ES6 modules的静态分析失效。所以我们需要在`babel`配置中**去掉`CommonJS`模块**。\n比如使用如下配置：\n\n\t\tplugins: [  \n\t\t\t        'transform-es2015-template-literals',  \n\t\t\t        'transform-es2015-literals',  \n\t\t\t        'transform-es2015-function-name',  \n\t\t\t        'transform-es2015-arrow-functions',  \n\t\t\t        'transform-es2015-block-scoped-functions',  \n\t\t\t        'transform-es2015-classes',  \n\t\t\t        'transform-es2015-object-super',  \n\t\t\t        'transform-es2015-shorthand-properties',  \n\t\t\t        'transform-es2015-computed-properties',  \n\t\t\t        'transform-es2015-for-of',  \n\t\t\t        'transform-es2015-sticky-regex',  \n\t\t\t        'transform-es2015-unicode-regex',  \n\t\t\t        'check-es2015-constants',  \n\t\t\t        'transform-es2015-spread',  \n\t\t\t        'transform-es2015-parameters',  \n\t\t\t        'transform-es2015-destructuring',  \n\t\t\t        'transform-es2015-block-scoping',  \n\t\t\t        'transform-es2015-typeof-symbol',  \n\t\t\t        ['transform-regenerator', {async: false, asyncGenerators: false}]\n\t\t\t    ]\n\n#### 配合多入口文件\n> 多入口文件多webpack配置\n\n有些情况下我们的webpack入口文件有多个，一般情况我们会设置多入口文件也就是在`entry`属性中设置一个入口文件列表的map映射。但是在此情况下需要使用Tree Shaking可能遇到一些问题，详见[Webpack2 with mutli-file entry tree-shaking not behave as expected](https://github.com/webpack/webpack/issues/4353)。\n\n根据开发者回答是现阶段限制就是这样，需要使用多配置文件进行配置。也就是说，多入口文件相当于如下：\n\n![](https://img.kuaidadi.com/cms/img/upload_6c65d0dcb41eabff3e01245ca8fc671c.png)\n\n换成多配置文件就要替换成如下结构：\n\n![](https://img.kuaidadi.com/cms/img/upload_1b072a8f87a53e0ff08e16d7714b1068.png)\n\n这样就能够达到需求。详见demo：[webpack-tree-shaking-demo](https://github.com/x-yao/webpack-tree-shaking-demo)\n\n\n","slug":"如何使用webpack2进行Tree Shaking","published":1,"date":"2017-03-23T08:47:46.000Z","updated":"2017-03-23T08:48:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0m5p1rk0000x43aazxn5knk","content":"<h2 id=\"如何使用webpack2进行Tree-Shaking\"><a href=\"#如何使用webpack2进行Tree-Shaking\" class=\"headerlink\" title=\"如何使用webpack2进行Tree Shaking\"></a>如何使用webpack2进行Tree Shaking</h2><blockquote>\n<p>这篇文章设定读者有一定的webpack基础能够使用webpack2进行基本项目配置。所以具体的配置等没有详细说明，着重说明Tree Shaking这一特性在webpack2中的使用。</p>\n</blockquote>\n<h3 id=\"Tree-Shaking\"><a href=\"#Tree-Shaking\" class=\"headerlink\" title=\"Tree Shaking\"></a>Tree Shaking</h3><blockquote>\n<p>消灭没有用到的代码</p>\n</blockquote>\n<p><strong>Tree Shaking</strong>这个词最早听说于<code>rollup.js</code>，这个功能能够通过基于ES6 modules的静态特性做检测来找出未使用的代码。然后配合<code>uglifyjs</code>把无用代码“筛选”掉。</p>\n<a id=\"more\"></a>\n<p>比如在如下场景下：</p>\n<p><strong>util.js</strong></p>\n<pre><code>export const foo = function () {\n    return 1\n}\n\nexport const bar = function () {\n    return 2\n}\n\nexport const foobar = function () {\n    return 3\n}\n</code></pre><p><strong>bar.js</strong></p>\n<pre><code>import {bar} from &apos;./util&apos;\nconst a = bar();\n</code></pre><p>我们使用<code>foo.js</code>作为入口文件，自然希望webpack编译后只把<code>util.js</code>里面的<code>bar</code>变量引入到最终生成的文件，而其他没有用掉的能够被“优化”掉。Tree Shaking就是为了解决上述问题。</p>\n<p>最通常的情况就是我们项目中有某个公用方法文件，但是可能不同入口文件能够使用的方法很有限，这样会产生很多无用的方法打包到最后的文件当中。Tree Shaking则能够移除由此产生的大量冗余代码，达到优化的目的。</p>\n<h3 id=\"在webpack2中使用Tree-Shaking\"><a href=\"#在webpack2中使用Tree-Shaking\" class=\"headerlink\" title=\"在webpack2中使用Tree Shaking\"></a>在webpack2中使用Tree Shaking</h3><h4 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h4><p>还是以上述两个代码作为例子。设置<code>bar</code>作为入口文件，最后编译出的代码如下：</p>\n<pre><code>&quot;use strict&quot;;\nconst foo = function () {\n    return 1\n}\n/* unused harmony export foo */\n\n\nconst bar = function () {\n    return 2\n}\n/* harmony export (immutable) */ __webpack_exports__[&quot;a&quot;] = bar;\n\n\nconst foobar = function () {\n    return 3\n}\n/* unused harmony export foobar */\n</code></pre><p>可见<code>foo</code>,<code>foobar</code>这两个变量已经被定义为<strong>unused</strong>而未exports出来，再经过<strong>压缩</strong>后便没有了这两个变量的代码。</p>\n<h4 id=\"配合Babel\"><a href=\"#配合Babel\" class=\"headerlink\" title=\"配合Babel\"></a>配合Babel</h4><blockquote>\n<p>移除<code>CommonJS</code>模块</p>\n</blockquote>\n<p>在实际生产环境当中我们通常使用<code>babel</code>来编译模块化代码，但是初次使用会发现当配合<code>babel</code>是会导致<code>Tree Shaking</code>失效，原因大多是因为<strong>使用了<code>CommonJS</code>编译模块</strong>导致webpack基于ES6 modules的静态分析失效。所以我们需要在<code>babel</code>配置中<strong>去掉<code>CommonJS</code>模块</strong>。<br>比如使用如下配置：</p>\n<pre><code>plugins: [  \n            &apos;transform-es2015-template-literals&apos;,  \n            &apos;transform-es2015-literals&apos;,  \n            &apos;transform-es2015-function-name&apos;,  \n            &apos;transform-es2015-arrow-functions&apos;,  \n            &apos;transform-es2015-block-scoped-functions&apos;,  \n            &apos;transform-es2015-classes&apos;,  \n            &apos;transform-es2015-object-super&apos;,  \n            &apos;transform-es2015-shorthand-properties&apos;,  \n            &apos;transform-es2015-computed-properties&apos;,  \n            &apos;transform-es2015-for-of&apos;,  \n            &apos;transform-es2015-sticky-regex&apos;,  \n            &apos;transform-es2015-unicode-regex&apos;,  \n            &apos;check-es2015-constants&apos;,  \n            &apos;transform-es2015-spread&apos;,  \n            &apos;transform-es2015-parameters&apos;,  \n            &apos;transform-es2015-destructuring&apos;,  \n            &apos;transform-es2015-block-scoping&apos;,  \n            &apos;transform-es2015-typeof-symbol&apos;,  \n            [&apos;transform-regenerator&apos;, {async: false, asyncGenerators: false}]\n        ]\n</code></pre><h4 id=\"配合多入口文件\"><a href=\"#配合多入口文件\" class=\"headerlink\" title=\"配合多入口文件\"></a>配合多入口文件</h4><blockquote>\n<p>多入口文件多webpack配置</p>\n</blockquote>\n<p>有些情况下我们的webpack入口文件有多个，一般情况我们会设置多入口文件也就是在<code>entry</code>属性中设置一个入口文件列表的map映射。但是在此情况下需要使用Tree Shaking可能遇到一些问题，详见<a href=\"https://github.com/webpack/webpack/issues/4353\" target=\"_blank\" rel=\"external\">Webpack2 with mutli-file entry tree-shaking not behave as expected</a>。</p>\n<p>根据开发者回答是现阶段限制就是这样，需要使用多配置文件进行配置。也就是说，多入口文件相当于如下：</p>\n<p><img src=\"https://img.kuaidadi.com/cms/img/upload_6c65d0dcb41eabff3e01245ca8fc671c.png\" alt=\"\"></p>\n<p>换成多配置文件就要替换成如下结构：</p>\n<p><img src=\"https://img.kuaidadi.com/cms/img/upload_1b072a8f87a53e0ff08e16d7714b1068.png\" alt=\"\"></p>\n<p>这样就能够达到需求。详见demo：<a href=\"https://github.com/x-yao/webpack-tree-shaking-demo\" target=\"_blank\" rel=\"external\">webpack-tree-shaking-demo</a></p>\n","excerpt":"<h2 id=\"如何使用webpack2进行Tree-Shaking\"><a href=\"#如何使用webpack2进行Tree-Shaking\" class=\"headerlink\" title=\"如何使用webpack2进行Tree Shaking\"></a>如何使用webpack2进行Tree Shaking</h2><blockquote>\n<p>这篇文章设定读者有一定的webpack基础能够使用webpack2进行基本项目配置。所以具体的配置等没有详细说明，着重说明Tree Shaking这一特性在webpack2中的使用。</p>\n</blockquote>\n<h3 id=\"Tree-Shaking\"><a href=\"#Tree-Shaking\" class=\"headerlink\" title=\"Tree Shaking\"></a>Tree Shaking</h3><blockquote>\n<p>消灭没有用到的代码</p>\n</blockquote>\n<p><strong>Tree Shaking</strong>这个词最早听说于<code>rollup.js</code>，这个功能能够通过基于ES6 modules的静态特性做检测来找出未使用的代码。然后配合<code>uglifyjs</code>把无用代码“筛选”掉。</p>","more":"<p>比如在如下场景下：</p>\n<p><strong>util.js</strong></p>\n<pre><code>export const foo = function () {\n    return 1\n}\n\nexport const bar = function () {\n    return 2\n}\n\nexport const foobar = function () {\n    return 3\n}\n</code></pre><p><strong>bar.js</strong></p>\n<pre><code>import {bar} from &apos;./util&apos;\nconst a = bar();\n</code></pre><p>我们使用<code>foo.js</code>作为入口文件，自然希望webpack编译后只把<code>util.js</code>里面的<code>bar</code>变量引入到最终生成的文件，而其他没有用掉的能够被“优化”掉。Tree Shaking就是为了解决上述问题。</p>\n<p>最通常的情况就是我们项目中有某个公用方法文件，但是可能不同入口文件能够使用的方法很有限，这样会产生很多无用的方法打包到最后的文件当中。Tree Shaking则能够移除由此产生的大量冗余代码，达到优化的目的。</p>\n<h3 id=\"在webpack2中使用Tree-Shaking\"><a href=\"#在webpack2中使用Tree-Shaking\" class=\"headerlink\" title=\"在webpack2中使用Tree Shaking\"></a>在webpack2中使用Tree Shaking</h3><h4 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h4><p>还是以上述两个代码作为例子。设置<code>bar</code>作为入口文件，最后编译出的代码如下：</p>\n<pre><code>&quot;use strict&quot;;\nconst foo = function () {\n    return 1\n}\n/* unused harmony export foo */\n\n\nconst bar = function () {\n    return 2\n}\n/* harmony export (immutable) */ __webpack_exports__[&quot;a&quot;] = bar;\n\n\nconst foobar = function () {\n    return 3\n}\n/* unused harmony export foobar */\n</code></pre><p>可见<code>foo</code>,<code>foobar</code>这两个变量已经被定义为<strong>unused</strong>而未exports出来，再经过<strong>压缩</strong>后便没有了这两个变量的代码。</p>\n<h4 id=\"配合Babel\"><a href=\"#配合Babel\" class=\"headerlink\" title=\"配合Babel\"></a>配合Babel</h4><blockquote>\n<p>移除<code>CommonJS</code>模块</p>\n</blockquote>\n<p>在实际生产环境当中我们通常使用<code>babel</code>来编译模块化代码，但是初次使用会发现当配合<code>babel</code>是会导致<code>Tree Shaking</code>失效，原因大多是因为<strong>使用了<code>CommonJS</code>编译模块</strong>导致webpack基于ES6 modules的静态分析失效。所以我们需要在<code>babel</code>配置中<strong>去掉<code>CommonJS</code>模块</strong>。<br>比如使用如下配置：</p>\n<pre><code>plugins: [  \n            &apos;transform-es2015-template-literals&apos;,  \n            &apos;transform-es2015-literals&apos;,  \n            &apos;transform-es2015-function-name&apos;,  \n            &apos;transform-es2015-arrow-functions&apos;,  \n            &apos;transform-es2015-block-scoped-functions&apos;,  \n            &apos;transform-es2015-classes&apos;,  \n            &apos;transform-es2015-object-super&apos;,  \n            &apos;transform-es2015-shorthand-properties&apos;,  \n            &apos;transform-es2015-computed-properties&apos;,  \n            &apos;transform-es2015-for-of&apos;,  \n            &apos;transform-es2015-sticky-regex&apos;,  \n            &apos;transform-es2015-unicode-regex&apos;,  \n            &apos;check-es2015-constants&apos;,  \n            &apos;transform-es2015-spread&apos;,  \n            &apos;transform-es2015-parameters&apos;,  \n            &apos;transform-es2015-destructuring&apos;,  \n            &apos;transform-es2015-block-scoping&apos;,  \n            &apos;transform-es2015-typeof-symbol&apos;,  \n            [&apos;transform-regenerator&apos;, {async: false, asyncGenerators: false}]\n        ]\n</code></pre><h4 id=\"配合多入口文件\"><a href=\"#配合多入口文件\" class=\"headerlink\" title=\"配合多入口文件\"></a>配合多入口文件</h4><blockquote>\n<p>多入口文件多webpack配置</p>\n</blockquote>\n<p>有些情况下我们的webpack入口文件有多个，一般情况我们会设置多入口文件也就是在<code>entry</code>属性中设置一个入口文件列表的map映射。但是在此情况下需要使用Tree Shaking可能遇到一些问题，详见<a href=\"https://github.com/webpack/webpack/issues/4353\">Webpack2 with mutli-file entry tree-shaking not behave as expected</a>。</p>\n<p>根据开发者回答是现阶段限制就是这样，需要使用多配置文件进行配置。也就是说，多入口文件相当于如下：</p>\n<p><img src=\"https://img.kuaidadi.com/cms/img/upload_6c65d0dcb41eabff3e01245ca8fc671c.png\" alt=\"\"></p>\n<p>换成多配置文件就要替换成如下结构：</p>\n<p><img src=\"https://img.kuaidadi.com/cms/img/upload_1b072a8f87a53e0ff08e16d7714b1068.png\" alt=\"\"></p>\n<p>这样就能够达到需求。详见demo：<a href=\"https://github.com/x-yao/webpack-tree-shaking-demo\">webpack-tree-shaking-demo</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0ccnigp0000pw3a2t1vo527","category_id":"cj0ccnih70003pw3aq9siuoeb","_id":"cj0ccnihx000cpw3abvs3aju7"},{"post_id":"cj0ccnihn0009pw3a5kuib6gc","category_id":"cj0ccnih70003pw3aq9siuoeb","_id":"cj0ccnii5000gpw3a65rmd4lc"},{"post_id":"cj0ccnih00002pw3azlokkelc","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0ccnii6000jpw3a0pl93yev"},{"post_id":"cj0ccnihy000dpw3a8r69lqiw","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0ccnii7000lpw3aiarnudzw"},{"post_id":"cj0ccnihc0004pw3aloeh4w25","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0ccnii8000opw3aj52ufiut"},{"post_id":"cj0ccnihh0006pw3a66ma47x2","category_id":"cj0ccnii5000ipw3ay6byedbh","_id":"cj0ccnii9000rpw3atgcur1og"},{"post_id":"cj0ccnihk0007pw3ahklvpt4k","category_id":"cj0ccnii7000npw3aklvn20ca","_id":"cj0ccniib000tpw3amus9hupc"},{"post_id":"cj0jdb6al0000hsfyngxfmfb4","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0jdb6aw0002hsfy6q0es5q2"},{"post_id":"cj0hlapo80000x13apwr4gq4e","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0jdlgxq0001fmfy82ro665p"},{"post_id":"cj0m5p1rk0000x43aazxn5knk","category_id":"cj0ccnihm0008pw3awofuugjm","_id":"cj0m5p1s60002x43ardk97whg"}],"PostTag":[{"post_id":"cj0ccnih00002pw3azlokkelc","tag_id":"cj0ccnihg0005pw3a8xethwcx","_id":"cj0ccnihx000bpw3akrkgxyxc"},{"post_id":"cj0ccnihc0004pw3aloeh4w25","tag_id":"cj0ccnihg0005pw3a8xethwcx","_id":"cj0ccnii5000hpw3arnwr7rb3"},{"post_id":"cj0ccnihh0006pw3a66ma47x2","tag_id":"cj0ccnii3000fpw3adkzds12s","_id":"cj0ccnii7000mpw3atvzcaiez"},{"post_id":"cj0ccnihk0007pw3ahklvpt4k","tag_id":"cj0ccnii7000kpw3a45p7nowc","_id":"cj0ccnii8000qpw3atr664c69"},{"post_id":"cj0ccnihy000dpw3a8r69lqiw","tag_id":"cj0ccnii8000ppw3ax8uwoqkk","_id":"cj0ccniid000upw3afyw1r9tw"},{"post_id":"cj0ccnihy000dpw3a8r69lqiw","tag_id":"cj0ccnii9000spw3au1xu2qy8","_id":"cj0ccniid000vpw3acrn2q8kv"},{"post_id":"cj0jdb6al0000hsfyngxfmfb4","tag_id":"cj0ccnihg0005pw3a8xethwcx","_id":"cj0jdb6av0001hsfy8l2aom2s"},{"post_id":"cj0hlapo80000x13apwr4gq4e","tag_id":"cj0hlapom0001x13axfxf6rhn","_id":"cj0jdlgxn0000fmfyvzbqihwe"},{"post_id":"cj0m5p1rk0000x43aazxn5knk","tag_id":"cj0m5p1s00001x43aes78yop0","_id":"cj0m5p1sa0004x43acxl09g90"},{"post_id":"cj0m5p1rk0000x43aazxn5knk","tag_id":"cj0m5p1s80003x43ar34fr4nt","_id":"cj0m5p1sb0005x43agvvyv128"}],"Tag":[{"name":"vue","_id":"cj0ccnihg0005pw3a8xethwcx"},{"name":"ios","_id":"cj0ccnii3000fpw3adkzds12s"},{"name":"nginx","_id":"cj0ccnii7000kpw3a45p7nowc"},{"name":"正则表达式","_id":"cj0ccnii8000ppw3ax8uwoqkk"},{"name":"js","_id":"cj0ccnii9000spw3au1xu2qy8"},{"name":"rgba","_id":"cj0hlapom0001x13axfxf6rhn"},{"name":"webpack","_id":"cj0m5p1s00001x43aes78yop0"},{"name":"babel","_id":"cj0m5p1s80003x43ar34fr4nt"}]}}